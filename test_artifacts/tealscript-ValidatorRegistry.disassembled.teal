#pragma version 11
intcblock 0 1 8 24 18 268 32 6 3 242 2 10 252 260 700 4 100000 900 16 200 40 72 192 244 1000000 4096 5 226 0 300 432 892 1000 28500 50000 11 80 145 153 209
bytecblock 0x76 0x 0x151f7c75 0x737073 0x7374616b6564 0x00 0x6e756d5374616b657273 0x0000000000000000 0x0a8101 0x706f6f6c54656d706c617465417070726f76616c4279746573 0x692e6f776e65722e61 0x6e756d56 0x696e6974 0x63f3f28b 0x12f4bd4b
txn ApplicationID
!
intc 7 // 6
*
txn OnCompletion
+
switch label1 label2 label2 label2 label2 label2 label3 label2 label2 label2 label2 label2
label2:
err
label153:
callsub label4
intc_1 // 1
return
label4:
proto 0 0
bytec 12 // "init"
intc_0 // 0
bytec 5 // 0x00
intc_0 // 0
uncover 2
setbit
app_global_put
bytec 11 // "numV"
intc_0 // 0
app_global_put
bytec 6 // "numStakers"
intc_0 // 0
app_global_put
bytec 4 // "staked"
intc_0 // 0
app_global_put
retsub
label154:
txna ApplicationArgs 1
btoi
callsub label5
intc_1 // 1
return
label5:
proto 1 0
bytec 9 // "poolTemplateApprovalBytes"
frame_dig -1
box_create
pop
retsub
label155:
txna ApplicationArgs 2
extract 2 0
txna ApplicationArgs 1
btoi
callsub label6
intc_1 // 1
return
label6:
proto 2 0
bytec 12 // "init"
app_global_get
intc_0 // 0
getbit
!
assert
bytec 9 // "poolTemplateApprovalBytes"
frame_dig -1
frame_dig -2
box_replace
retsub
label156:
callsub label7
intc_1 // 1
return
label7:
proto 0 0
bytec 12 // "init"
intc_1 // 1
bytec 5 // 0x00
intc_0 // 0
uncover 2
setbit
app_global_put
retsub
label157:
callsub label8
intc_1 // 1
return
label8:
proto 0 0
retsub
label158:
bytec_2 // 0x151f7c75
callsub label9
concat
log
intc_1 // 1
return
label9:
proto 0 1
pushint 1101
callsub label10
itob
intc 8 // 3
intc 35 // 11
intc_0 // 0
dupn 2
intc 8 // 3
intc_1 // 1
callsub label11
itob
concat
intc 16 // 100000
pushint 12807
callsub label10
+
itob
concat
pushint 179
callsub label10
itob
concat
retsub
label159:
bytec_2 // 0x151f7c75
callsub label12
concat
log
intc_1 // 1
return
label12:
proto 0 1
pushbytes 0x000000000000000100000000000f4240000000000000000000000000000f424000000000000f4240 // 0x000000000000000100000000000f4240000000000000000000000000000f424000000000000f4240
callsub label13
itob
concat
callsub label14
itob
concat
callsub label15
itob
concat
pushbytes 0x0000000000000008 // 0x0000000000000008
concat
pushbytes 0x0000000000000003 // 0x0000000000000003
concat
pushbytes 0x00000000000000c8 // 0x00000000000000c8
concat
retsub
label160:
bytec_2 // 0x151f7c75
callsub label16
itob
concat
log
intc_1 // 1
return
label16:
proto 0 1
bytec 11 // "numV"
app_global_get
retsub
label161:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label17
concat
log
intc_1 // 1
return
label17:
proto 1 1
intc_0 // 0
intc 9 // 242
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
retsub
label162:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label18
concat
log
intc_1 // 1
return
label18:
proto 1 1
intc 9 // 242
pushint 26
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
retsub
label163:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label19
concat
log
intc_1 // 1
return
label19:
proto 1 1
intc_2 // 8
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
intc 20 // 40
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
concat
retsub
label164:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label20
dup
len
intc 4 // 18
/
itob
extract 6 2
swap
concat
concat
log
intc_1 // 1
return
label20:
proto 1 1
bytec_1 // ""
dupn 2
bytec_1 // ""
frame_bury 0
intc 5 // 268
intc 30 // 432
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_bury 1
intc_0 // 0
frame_bury 2
label23:
frame_dig 2
intc_3 // 24
<
bz label21
frame_dig 1
frame_dig 2
intc 4 // 18
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
intc_0 // 0
==
bz label22
b label21
label22:
frame_dig 0
frame_dig 1
frame_dig 2
intc 4 // 18
*
intc 4 // 18
extract3
concat
frame_bury 0
frame_dig 2
intc_1 // 1
+
frame_bury 2
b label23
label21:
frame_dig 0
frame_bury 0
popn 2
retsub
label165:
bytec_2 // 0x151f7c75
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
btoi
callsub label24
itob
concat
log
intc_1 // 1
return
label24:
proto 2 1
frame_dig -2
intc_0 // 0
!=
dup
bz label25
frame_dig -2
intc_3 // 24
<=
&&
label25:
assert
intc 5 // 268
frame_dig -2
intc_1 // 1
-
intc 4 // 18
*
+
intc_0 // 0
+
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
retsub
label166:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
dup
len
intc_3 // 24
==
assert
callsub label26
concat
log
intc_1 // 1
return
label26:
proto 1 1
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 4 // 18
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
retsub
label167:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label27
itob
concat
log
intc_1 // 1
return
label27:
proto 1 1
bytec_1 // ""
dupn 2
intc 9 // 242
intc 10 // 2
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 0
callsub label14
frame_dig 0
/
frame_bury 1
pushint 217
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 2
frame_dig 2
intc_0 // 0
==
bz label28
callsub label13
frame_bury 2
label28:
frame_dig 1
frame_dig 2
<
bz label29
frame_dig 1
frame_bury 2
label29:
frame_dig 2
frame_bury 0
popn 2
retsub
label168:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
dup
len
intc 6 // 32
==
assert
callsub label30
bytec 5 // 0x00
intc_0 // 0
uncover 2
setbit
concat
log
intc_1 // 1
return
label30:
proto 1 1
bytec_3 // "sps"
frame_dig -1
concat
box_len
swap
pop
!
retsub
label169:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
dup
len
intc 6 // 32
==
assert
callsub label31
dup
len
intc_3 // 24
/
itob
extract 6 2
swap
concat
concat
log
intc_1 // 1
return
label31:
proto 1 1
bytec_1 // ""
dupn 2
bytec_3 // "sps"
frame_dig -1
concat
box_len
swap
pop
!
bz label32
bytec_1 // ""
b label33
label32:
bytec_1 // ""
frame_bury 0
bytec_3 // "sps"
frame_dig -1
concat
box_get
assert
frame_bury 1
intc_0 // 0
frame_bury 2
label36:
frame_dig 2
intc 7 // 6
<
bz label34
frame_dig 1
frame_dig 2
intc_3 // 24
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
intc_0 // 0
!=
bz label35
frame_dig 0
frame_dig 1
frame_dig 2
intc_3 // 24
*
intc_3 // 24
extract3
concat
frame_bury 0
label35:
frame_dig 2
intc_1 // 1
+
frame_bury 2
b label36
label34:
frame_dig 0
label33:
frame_bury 0
popn 2
retsub
label170:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label37
concat
log
intc_1 // 1
return
label37:
proto 1 1
intc 14 // 700
intc 19 // 200
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
retsub
label171:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label38
concat
log
intc_1 // 1
return
label38:
proto 1 1
bytec_0 // "v"
frame_dig -1
itob
concat
box_len
swap
pop
assert
intc 17 // 900
intc 22 // 192
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
retsub
label172:
bytec_2 // 0x151f7c75
callsub label39
itob
concat
log
intc_1 // 1
return
label39:
proto 0 1
intc 28 // 0
retsub
label173:
bytec_2 // 0x151f7c75
txna ApplicationArgs 2
dup
len
intc 9 // 242
==
assert
txna ApplicationArgs 1
extract 2 0
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
callsub label40
itob
concat
log
intc_1 // 1
return
label40:
proto 3 1
bytec_1 // ""
frame_dig -3
callsub label41
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
callsub label9
extract 0 8
btoi
==
assert
frame_dig -1
gtxns Fee
pushint 10000000
>
assert
bytec 11 // "numV"
app_global_get
intc_1 // 1
+
frame_bury 0
bytec 11 // "numV"
frame_dig 0
app_global_put
bytec_0 // "v"
frame_dig 0
itob
concat
pushint 1092
box_create
pop
intc_0 // 0
frame_dig -3
bytec_0 // "v"
frame_dig 0
itob
concat
cover 2
box_replace
intc_0 // 0
frame_dig 0
itob
bytec_0 // "v"
frame_dig 0
itob
concat
cover 2
box_replace
frame_dig -3
extract 72 8
btoi
intc_0 // 0
!=
bz label42
frame_dig -3
extract 72 8
btoi
callsub label43
assert
txn Sender
frame_dig -3
extract 72 8
btoi
bytec 10 // "i.owner.a"
app_global_get_ex
assert
==
assert
label42:
frame_dig -3
extract 80 1
btoi
intc 8 // 3
==
dup
bnz label44
frame_dig -3
extract 80 1
btoi
intc 15 // 4
==
||
label44:
bz label45
frame_dig -3
extract 113 8
btoi
callsub label43
assert
label45:
pushbytes 0xa8dd21cb // 0xa8dd21cb
frame_dig 0
itob
frame_dig -3
extract 8 32
concat
frame_dig -3
extract 40 32
concat
concat
log
frame_dig 0
frame_bury 0
retsub
label174:
txna ApplicationArgs 2
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 1
btoi
callsub label46
intc_1 // 1
return
label46:
proto 2 0
frame_dig -1
callsub label47
frame_dig -2
global ZeroAddress
!=
assert
intc 20 // 40
frame_dig -2
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
retsub
label175:
txna ApplicationArgs 3
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
btoi
callsub label48
intc_1 // 1
return
label48:
proto 3 0
frame_dig -1
callsub label47
intc 27 // 226
frame_dig -2
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
pushint 234
frame_dig -3
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
retsub
label176:
txna ApplicationArgs 3
extract 2 0
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
btoi
callsub label49
intc_1 // 1
return
label49:
proto 3 0
frame_dig -1
callsub label47
frame_dig -2
callsub label43
assert
txn Sender
frame_dig -2
bytec 10 // "i.owner.a"
app_global_get_ex
assert
==
assert
intc 21 // 72
frame_dig -2
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
retsub
label177:
txna ApplicationArgs 2
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 1
btoi
callsub label50
intc_1 // 1
return
label50:
proto 2 0
frame_dig -1
callsub label47
frame_dig -2
global ZeroAddress
!=
assert
pushint 177
frame_dig -2
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
retsub
label178:
txna ApplicationArgs 6
btoi
txna ApplicationArgs 5
btoi
txna ApplicationArgs 4
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 3
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 2
dup
len
intc_1 // 1
==
assert
btoi
txna ApplicationArgs 1
btoi
callsub label51
intc_1 // 1
return
label51:
proto 6 0
frame_dig -1
callsub label47
frame_dig -2
intc_0 // 0
>=
dup
bz label52
frame_dig -2
intc 15 // 4
<
&&
label52:
assert
frame_dig -2
intc_1 // 1
==
bz label53
frame_dig -3
global ZeroAddress
!=
assert
label53:
frame_dig -2
intc 8 // 3
==
dup
bnz label54
frame_dig -2
intc 15 // 4
==
||
label54:
bz label55
frame_dig -4
extract 0 8
btoi
callsub label43
assert
label55:
intc 36 // 80
frame_dig -2
itob
extract 7 1
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
pushint 81
frame_dig -3
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
pushint 113
frame_dig -4
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
intc 37 // 145
frame_dig -5
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
pushint 161
frame_dig -6
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
retsub
label179:
bytec_2 // 0x151f7c75
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
btoi
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
callsub label56
concat
log
intc_1 // 1
return
label56:
proto 3 1
bytec_1 // ""
dup
frame_dig -2
callsub label57
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns Amount
callsub label9
extract 8 8
btoi
==
assert
bytec_0 // "v"
frame_dig -2
itob
concat
box_len
swap
pop
assert
intc 9 // 242
intc 10 // 2
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_extract
btoi
frame_bury 0
frame_dig 0
intc_3 // 24
>=
bz label58
err
label58:
frame_dig 0
intc_1 // 1
+
frame_bury 0
itxn_begin
intc 7 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field OnCompletion
bytec 9 // "poolTemplateApprovalBytes"
intc_0 // 0
intc 25 // 4096
box_extract
itxn_field ApprovalProgramPages
bytec 9 // "poolTemplateApprovalBytes"
intc 25 // 4096
bytec 9 // "poolTemplateApprovalBytes"
box_len
assert
intc 25 // 4096
-
box_extract
itxn_field ApprovalProgramPages
pushbytes 0x0b // 0x0b
itxn_field ClearStateProgram
intc 35 // 11
itxn_field GlobalNumUint
intc 8 // 3
itxn_field GlobalNumByteSlice
intc 8 // 3
itxn_field ExtraProgramPages
pushbytes 0x59e90aa6 // 0x59e90aa6
itxn_field ApplicationArgs
txna Applications 0
itob
itxn_field ApplicationArgs
frame_dig -2
itob
itxn_field ApplicationArgs
frame_dig 0
itob
itxn_field ApplicationArgs
intc 39 // 209
intc_2 // 8
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_extract
btoi
itob
itxn_field ApplicationArgs
intc_0 // 0
itxn_field Fee
itxn_submit
intc 9 // 242
frame_dig 0
itob
extract 6 2
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_replace
itxn CreatedApplicationID
frame_bury 1
intc 5 // 268
frame_dig 0
intc_1 // 1
-
intc 4 // 18
*
+
intc_0 // 0
+
frame_dig 1
itob
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_replace
frame_dig -3
frame_dig 1
frame_dig -2
callsub label59
pushbytes 0xfbcc0f6b // 0xfbcc0f6b
frame_dig -2
itob
frame_dig 0
itob
dup
bitlen
intc 18 // 16
<=
assert
extract 6 2
concat
frame_dig 1
itob
concat
concat
log
frame_dig -2
itob
frame_dig 0
itob
concat
itxn CreatedApplicationID
itob
concat
frame_bury 0
popn 1
retsub
label180:
bytec_2 // 0x151f7c75
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
btoi
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
callsub label60
concat
log
intc_1 // 1
return
label60:
proto 3 1
bytec_1 // ""
dupn 5
bytec_0 // "v"
frame_dig -2
itob
concat
box_len
swap
pop
assert
intc 27 // 226
intc_2 // 8
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_extract
btoi
intc_0 // 0
>
bz label61
intc 27 // 226
intc_2 // 8
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_extract
btoi
global LatestTimestamp
>
assert
label61:
txn Sender
frame_bury 0
frame_dig -1
gtxns Sender
frame_dig 0
==
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -3
frame_dig -2
callsub label62
frame_dig -1
gtxns Amount
frame_bury 1
intc_0 // 0
frame_bury 2
frame_dig 0
callsub label30
bz label63
callsub label9
extract 24 8
btoi
frame_bury 2
frame_dig 1
frame_dig 2
-
frame_bury 1
bytec_3 // "sps"
frame_dig 0
concat
pushint 144
box_create
pop
label63:
intc 12 // 252
intc_2 // 8
bytec_0 // "v"
frame_dig -2
itob
concat
cover 2
box_extract
btoi
frame_dig 1
+
callsub label14
<
assert
frame_dig 1
frame_dig 0
frame_dig -2
callsub label64
frame_bury 3
frame_dig 3
store 255
load 255
intc 22 // 192
getbit
frame_bury 4
frame_dig 3
store 255
load 255
pushint 193
getbit
frame_bury 5
frame_dig 3
store 255
load 255
extract 8 8
btoi
intc_0 // 0
==
bz label65
err
label65:
frame_dig 3
store 255
load 255
extract 0 24
frame_dig 0
callsub label66
frame_dig 5
frame_dig 4
frame_dig 2
frame_dig 3
store 255
load 255
extract 0 24
frame_dig -1
callsub label67
pushbytes 0x962b4143 // 0x962b4143
frame_dig -2
itob
frame_dig 3
store 255
load 255
extract 8 8
btoi
itob
dup
bitlen
intc 18 // 16
<=
assert
extract 6 2
concat
frame_dig 3
store 255
load 255
extract 16 8
btoi
itob
concat
frame_dig 0
concat
frame_dig 1
itob
concat
concat
log
frame_dig 3
store 255
load 255
extract 0 24
frame_bury 0
popn 5
retsub
label181:
bytec_2 // 0x151f7c75
txna ApplicationArgs 1
btoi
callsub label68
concat
log
intc_1 // 1
return
label68:
proto 1 1
bytec_1 // ""
dupn 8
intc 5 // 268
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 0
frame_dig 0
intc_0 // 0
!=
assert
txn Sender
frame_dig 0
app_params_get AppAddress
pop
!=
bz label69
intc 14 // 700
intc 19 // 200
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
b label70
label69:
global Round
frame_bury 1
intc 31 // 892
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 2
frame_dig 2
intc_0 // 0
!=
bz label71
frame_dig 0
pushbytes 0x6c6173745061796f7574 // "lastPayout"
app_global_get_ex
assert
frame_dig 2
==
bz label72
intc 14 // 700
intc 19 // 200
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
b label70
label72:
pushint 169
intc 15 // 4
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 3
frame_dig 1
frame_dig 1
frame_dig 3
%
-
frame_bury 4
frame_dig 2
frame_dig 2
frame_dig 3
%
-
frame_dig 4
==
bz label71
intc 14 // 700
intc 19 // 200
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
b label70
label71:
intc 31 // 892
frame_dig 1
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
intc 9 // 242
intc 10 // 2
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 5
intc 12 // 252
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 6
intc_0 // 0
frame_bury 7
label74:
frame_dig 7
frame_dig 5
<
bz label73
intc 5 // 268
frame_dig 7
intc 4 // 18
*
+
intc 11 // 10
+
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
pushint 1000000
mulw
intc_0 // 0
frame_dig 6
divmodw
pop
pop
swap
!
assert
frame_bury 8
intc 14 // 700
frame_dig 7
intc_2 // 8
*
+
frame_dig 8
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
frame_dig 7
intc_1 // 1
+
frame_bury 7
b label74
label73:
intc 14 // 700
intc 19 // 200
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
label70:
frame_bury 0
popn 8
retsub
label182:
txna ApplicationArgs 5
btoi
txna ApplicationArgs 4
btoi
txna ApplicationArgs 3
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
dup
len
intc_3 // 24
==
assert
callsub label75
intc_1 // 1
return
label75:
proto 5 0
frame_dig -1
callsub label76
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 11 // 10
+
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 11 // 10
+
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -2
+
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
intc 12 // 252
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -2
+
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
intc 13 // 260
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -3
+
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
bytec 4 // "staked"
app_global_get
frame_dig -2
+
bytec 4 // "staked"
swap
app_global_put
frame_dig -1
extract 0 8
btoi
callsub label77
pushbytes 0xb3e47c3d // 0xb3e47c3d
frame_dig -1
extract 0 8
btoi
itob
frame_dig -1
extract 8 8
btoi
itob
dup
bitlen
intc 18 // 16
<=
assert
extract 6 2
concat
frame_dig -1
extract 16 8
btoi
itob
concat
frame_dig -4
itob
concat
frame_dig -5
itob
concat
frame_dig -2
itob
concat
frame_dig -3
itob
concat
concat
log
retsub
label183:
txna ApplicationArgs 5
dup
len
intc_1 // 1
==
assert
intc_0 // 0
getbit
txna ApplicationArgs 4
btoi
txna ApplicationArgs 3
btoi
txna ApplicationArgs 2
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 1
dup
len
intc_3 // 24
==
assert
callsub label78
intc_1 // 1
return
label78:
proto 5 0
bytec_1 // ""
dupn 3
global OpcodeBudget
intc 29 // 300
<
bz label79
itxn_begin
intc 7 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
bytec 8 // 0x0a8101
dup
itxn_field ApprovalProgram
itxn_field ClearStateProgram
intc 26 // 5
itxn_field OnCompletion
itxn_submit
label79:
frame_dig -1
callsub label76
frame_dig -3
intc_0 // 0
>
dup
bnz label80
frame_dig -4
intc_0 // 0
>
||
label80:
assert
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 11 // 10
+
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 11 // 10
+
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -3
-
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
intc 12 // 252
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -3
-
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
bytec 4 // "staked"
app_global_get
frame_dig -3
-
bytec 4 // "staked"
swap
app_global_put
frame_dig -4
intc_0 // 0
>
bz label81
intc 38 // 153
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_bury 0
frame_dig 0
intc_0 // 0
!=
assert
intc 13 // 260
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -4
>=
assert
intc 13 // 260
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -4
-
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
frame_dig -1
extract 8 8
btoi
intc_1 // 1
!=
bz label82
itxn_begin
intc 7 // 6
itxn_field TypeEnum
bytec 13 // 0x63f3f28b
itxn_field ApplicationArgs
intc 5 // 268
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
itxn_field ApplicationID
frame_dig -2
itxn_field ApplicationArgs
frame_dig 0
itob
itxn_field ApplicationArgs
frame_dig -4
itob
itxn_field ApplicationArgs
intc_0 // 0
itxn_field Fee
itxn_submit
label82:
bytec 14 // 0x12f4bd4b
frame_dig -1
extract 0 8
btoi
itob
frame_dig -1
extract 8 8
btoi
itob
dup
bitlen
intc 18 // 16
<=
assert
extract 6 2
concat
frame_dig -1
extract 16 8
btoi
itob
concat
frame_dig -2
concat
frame_dig -3
itob
concat
frame_dig -4
itob
concat
frame_dig 0
itob
concat
concat
log
b label83
label81:
bytec 14 // 0x12f4bd4b
frame_dig -1
extract 0 8
btoi
itob
frame_dig -1
extract 8 8
btoi
itob
dup
bitlen
intc 18 // 16
<=
assert
extract 6 2
concat
frame_dig -1
extract 16 8
btoi
itob
concat
frame_dig -2
concat
frame_dig -3
itob
concat
bytec 7 // 0x0000000000000000
concat
bytec 7 // 0x0000000000000000
concat
concat
log
label83:
frame_dig -5
bz label84
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc_2 // 8
+
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc_2 // 8
+
intc 10 // 2
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
intc_1 // 1
-
itob
extract 6 2
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
frame_dig -1
extract 0 8
btoi
itob
frame_dig -1
extract 8 8
btoi
itob
concat
frame_dig -1
extract 16 8
btoi
itob
concat
frame_dig -2
callsub label85
frame_bury 1
frame_dig 1
store 255
load 255
intc_0 // 0
getbit
frame_bury 2
frame_dig 1
store 255
load 255
intc_1 // 1
getbit
frame_bury 3
frame_dig 2
bz label86
intc 23 // 244
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
intc_1 // 1
-
itob
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_replace
label86:
frame_dig 3
bz label84
bytec 6 // "numStakers"
app_global_get
intc_1 // 1
-
bytec 6 // "numStakers"
swap
app_global_put
label84:
retsub
label184:
bytec_2 // 0x151f7c75
txna ApplicationArgs 3
btoi
txna ApplicationArgs 2
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 1
btoi
callsub label64
concat
log
intc_1 // 1
return
label64:
proto 3 1
bytec_1 // ""
dupn 7
intc_1 // 1
frame_bury 0
intc_1 // 1
frame_bury 1
frame_dig -1
callsub label27
frame_bury 2
bytec_3 // "sps"
frame_dig -2
concat
box_len
swap
pop
bz label87
bytec_3 // "sps"
frame_dig -2
concat
box_get
assert
frame_bury 3
frame_dig -1
intc_0 // 0
!=
assert
intc_0 // 0
frame_bury 4
label92:
frame_dig 4
intc 7 // 6
<
bz label87
global OpcodeBudget
intc 29 // 300
<
bz label88
itxn_begin
intc 7 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
bytec 8 // 0x0a8101
dup
itxn_field ApprovalProgram
itxn_field ClearStateProgram
intc 26 // 5
itxn_field OnCompletion
itxn_submit
label88:
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
intc_0 // 0
==
bz label89
b label90
label89:
intc_0 // 0
frame_bury 1
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
frame_dig -1
==
bz label90
intc_0 // 0
frame_bury 0
intc 5 // 268
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_2 // 8
+
intc_2 // 8
extract3
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 11 // 10
+
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_dig -3
+
frame_dig 2
<=
bz label90
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_3 // 24
extract3
bytec 5 // 0x00
intc_0 // 0
frame_dig 0
setbit
intc_1 // 1
frame_dig 1
setbit
concat
b label91
label90:
frame_dig 4
intc_1 // 1
+
frame_bury 4
b label92
label87:
frame_dig -3
intc 39 // 209
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
>=
assert
intc 5 // 268
intc 30 // 432
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_bury 5
intc 9 // 242
intc 10 // 2
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 6
intc_0 // 0
frame_bury 7
label95:
frame_dig 7
frame_dig 6
<
bz label93
frame_dig 5
frame_dig 7
intc 4 // 18
*
intc 11 // 10
+
intc_2 // 8
extract3
btoi
frame_dig -3
+
frame_dig 2
<=
bz label94
frame_dig -1
itob
frame_dig 7
intc_1 // 1
+
itob
concat
frame_dig 5
frame_dig 7
intc 4 // 18
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
itob
concat
bytec 5 // 0x00
intc_0 // 0
frame_dig 0
setbit
intc_1 // 1
frame_dig 1
setbit
concat
b label91
label94:
frame_dig 7
intc_1 // 1
+
frame_bury 7
b label95
label93:
frame_dig -1
itob
bytec 7 // 0x0000000000000000
concat
bytec 7 // 0x0000000000000000
concat
bytec 5 // 0x00
intc_0 // 0
frame_dig 0
setbit
intc_1 // 1
frame_dig 1
setbit
concat
label91:
frame_bury 0
popn 7
retsub
label185:
txna ApplicationArgs 3
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 1
btoi
callsub label96
intc_1 // 1
return
label96:
proto 3 0
bytec_1 // ""
dupn 2
frame_dig -1
callsub label57
intc 17 // 900
intc 22 // 192
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_bury 0
frame_dig -3
intc_1 // 1
>=
dup
bz label97
frame_dig -3
intc_2 // 8
<=
&&
label97:
assert
intc_0 // 0
frame_bury 1
label102:
frame_dig 1
intc_2 // 8
<
bz label98
intc_0 // 0
frame_bury 2
label101:
frame_dig 2
intc 8 // 3
<
bz label99
frame_dig 0
intc_0 // 0
frame_dig 1
intc_3 // 24
*
+
intc_0 // 0
+
frame_dig 2
intc_2 // 8
*
+
intc_2 // 8
extract3
btoi
frame_dig -2
==
bz label100
frame_dig -3
intc_1 // 1
-
frame_dig 1
!=
assert
intc 17 // 900
frame_dig 1
intc_3 // 24
*
+
intc_0 // 0
+
frame_dig 2
intc_2 // 8
*
+
bytec 7 // 0x0000000000000000
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
itxn_begin
intc 7 // 6
itxn_field TypeEnum
pushbytes 0x51ef3b21 // 0x51ef3b21
itxn_field ApplicationArgs
frame_dig -2
itxn_field ApplicationID
intc_0 // 0
itxn_field Fee
itxn_submit
frame_dig -3
frame_dig -2
frame_dig -1
callsub label59
retsub
label100:
frame_dig 2
intc_1 // 1
+
frame_bury 2
b label101
label99:
frame_dig 1
intc_1 // 1
+
frame_bury 1
b label102
label98:
err
retsub
label186:
bytec_2 // 0x151f7c75
txna ApplicationArgs 2
dup
len
intc 6 // 32
==
assert
txna ApplicationArgs 1
btoi
callsub label103
itob
concat
log
intc_1 // 1
return
label103:
proto 2 1
bytec_1 // ""
dupn 3
frame_dig -1
callsub label47
intc 38 // 153
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 0
intc 13 // 260
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 1
frame_dig 0
intc_0 // 0
!=
assert
intc 5 // 268
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 2
frame_dig 2
app_params_get AppAddress
pop
frame_dig 0
asset_holding_get AssetBalance
pop
frame_dig 1
-
frame_bury 3
itxn_begin
intc 7 // 6
itxn_field TypeEnum
bytec 13 // 0x63f3f28b
itxn_field ApplicationArgs
frame_dig 2
itxn_field ApplicationID
frame_dig -2
itxn_field ApplicationArgs
frame_dig 0
itob
itxn_field ApplicationArgs
frame_dig 3
itob
itxn_field ApplicationArgs
intc_0 // 0
itxn_field Fee
itxn_submit
frame_dig 2
app_params_get AppAddress
pop
frame_dig 0
asset_holding_get AssetBalance
pop
frame_dig 1
==
assert
frame_dig 3
frame_bury 0
popn 3
retsub
label47:
proto 1 0
txn Sender
intc_2 // 8
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
==
assert
retsub
label57:
proto 1 0
txn Sender
intc_2 // 8
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
==
dup
bnz label104
txn Sender
intc 20 // 40
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
==
||
label104:
assert
retsub
label76:
proto 1 0
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
box_len
swap
pop
assert
frame_dig -1
extract 8 8
btoi
intc_3 // 24
<=
assert
frame_dig -1
extract 8 8
btoi
intc_0 // 0
>
dup
bz label105
frame_dig -1
extract 8 8
btoi
intc 9 // 242
intc 10 // 2
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
<=
&&
label105:
assert
frame_dig -1
extract 16 8
btoi
intc 5 // 268
frame_dig -1
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc_0 // 0
+
intc_2 // 8
bytec_0 // "v"
frame_dig -1
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
==
assert
txn Sender
frame_dig -1
extract 16 8
btoi
app_params_get AppAddress
pop
==
assert
frame_dig -1
extract 0 8
btoi
frame_dig -1
extract 16 8
btoi
pushbytes 0x76616c696461746f724964 // "validatorId"
app_global_get_ex
assert
==
assert
frame_dig -1
extract 8 8
btoi
frame_dig -1
extract 16 8
btoi
pushbytes 0x706f6f6c4964 // "poolId"
app_global_get_ex
assert
==
assert
retsub
label77:
proto 1 0
bytec_1 // ""
dup
bytec_0 // "v"
frame_dig -1
itob
concat
frame_bury 0
intc 21 // 72
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
intc_0 // 0
!=
bz label106
intc 21 // 72
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
bytec 10 // "i.owner.a"
app_global_get_ex
assert
frame_bury 1
intc_2 // 8
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_dig 1
!=
dup
bz label107
intc 20 // 40
intc 6 // 32
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_dig 1
!=
&&
label107:
bz label106
intc 21 // 72
bytec 7 // 0x0000000000000000
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
label106:
retsub
label41:
proto 1 0
frame_dig -1
extract 8 32
global ZeroAddress
!=
assert
frame_dig -1
extract 40 32
global ZeroAddress
!=
assert
txn Sender
frame_dig -1
extract 8 32
==
assert
frame_dig -1
extract 80 1
btoi
intc_0 // 0
>=
dup
bz label108
frame_dig -1
extract 80 1
btoi
intc 15 // 4
<=
&&
label108:
assert
frame_dig -1
extract 169 4
btoi
intc_1 // 1
>=
dup
bz label109
frame_dig -1
extract 169 4
btoi
intc 24 // 1000000
<=
&&
label109:
assert
frame_dig -1
extract 173 4
btoi
intc_0 // 0
>=
dup
bz label110
frame_dig -1
extract 173 4
btoi
intc 24 // 1000000
<=
&&
label110:
assert
frame_dig -1
extract 173 4
btoi
intc_0 // 0
!=
bz label111
frame_dig -1
extract 177 32
global ZeroAddress
!=
assert
label111:
frame_dig -1
extract 209 8
btoi
intc 24 // 1000000
>=
assert
frame_dig -1
extract 225 1
btoi
intc_0 // 0
>
dup
bz label112
frame_dig -1
extract 225 1
btoi
intc 8 // 3
<=
&&
label112:
assert
frame_dig -1
extract 226 8
btoi
intc_0 // 0
!=
bz label113
frame_dig -1
extract 226 8
btoi
global LatestTimestamp
>
assert
label113:
retsub
label67:
proto 5 0
bytec_1 // ""
dupn 2
intc 5 // 268
frame_dig -2
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc_0 // 0
+
intc_2 // 8
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_bury 0
itxn_begin
intc_1 // 1
itxn_field TypeEnum
frame_dig -1
gtxns Amount
frame_dig -3
-
itxn_field Amount
frame_dig 0
app_params_get AppAddress
pop
itxn_field Receiver
intc_0 // 0
itxn_field Fee
itxn_next
intc 7 // 6
itxn_field TypeEnum
pushbytes 0xf9c70cbd // 0xf9c70cbd
itxn_field ApplicationArgs
frame_dig 0
itxn_field ApplicationID
frame_dig -1
gtxns Sender
itxn_field ApplicationArgs
intc_0 // 0
itxn_field Fee
itxn_submit
itxn NumLogs
intc_1 // 1
-
itxnas Logs
extract 4 0
btoi
global OpcodeBudget
pushint 500
<
bz label114
itxn_begin
intc 7 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
bytec 8 // 0x0a8101
dup
itxn_field ApprovalProgram
itxn_field ClearStateProgram
intc 26 // 5
itxn_field OnCompletion
itxn_submit
label114:
frame_dig 0
bytec 6 // "numStakers"
app_global_get_ex
assert
frame_bury 1
frame_dig 0
bytec 4 // "staked"
app_global_get_ex
assert
frame_bury 2
intc 5 // 268
frame_dig -2
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc_2 // 8
+
frame_dig 1
itob
extract 6 2
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_replace
intc 5 // 268
frame_dig -2
extract 8 8
btoi
intc_1 // 1
-
intc 4 // 18
*
+
intc 11 // 10
+
frame_dig 2
itob
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_replace
frame_dig -4
bz label115
intc 23 // 244
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
intc_1 // 1
+
itob
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_replace
label115:
frame_dig -5
bz label116
bytec 6 // "numStakers"
app_global_get
intc_1 // 1
+
bytec 6 // "numStakers"
swap
app_global_put
label116:
intc 12 // 252
dup
intc_2 // 8
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_extract
btoi
frame_dig -1
gtxns Amount
frame_dig -3
-
+
itob
bytec_0 // "v"
frame_dig -2
extract 0 8
btoi
itob
concat
cover 2
box_replace
bytec 4 // "staked"
app_global_get
frame_dig -1
gtxns Amount
frame_dig -3
-
+
bytec 4 // "staked"
swap
app_global_put
retsub
label66:
proto 2 0
bytec_1 // ""
dupn 2
bytec_3 // "sps"
frame_dig -1
concat
box_len
swap
pop
assert
bytec_3 // "sps"
frame_dig -1
concat
box_get
assert
frame_bury 0
intc_0 // 0
frame_bury 1
intc_0 // 0
frame_bury 2
label121:
frame_dig 2
intc 7 // 6
<
bz label117
frame_dig 0
frame_dig 2
intc_3 // 24
*
intc_3 // 24
extract3
frame_dig -2
==
bz label118
retsub
label118:
frame_dig 1
intc_0 // 0
==
dup
bz label119
frame_dig 0
frame_dig 2
intc_3 // 24
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
intc_0 // 0
==
&&
label119:
bz label120
frame_dig 2
intc_1 // 1
+
frame_bury 1
label120:
frame_dig 2
intc_1 // 1
+
frame_bury 2
b label121
label117:
frame_dig 1
intc_0 // 0
==
bz label122
err
label122:
frame_dig 1
intc_1 // 1
-
intc_3 // 24
*
frame_dig -2
bytec_3 // "sps"
frame_dig -1
concat
cover 2
box_replace
retsub
label85:
proto 2 1
bytec_1 // ""
dupn 4
intc_0 // 0
frame_bury 0
intc_0 // 0
frame_bury 1
intc_0 // 0
frame_bury 2
bytec_3 // "sps"
frame_dig -1
concat
box_get
assert
frame_bury 3
intc_0 // 0
frame_bury 4
label127:
frame_dig 4
intc 7 // 6
<
bz label123
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
intc_0 // 0
==
bz label124
b label125
label124:
frame_dig 1
intc_1 // 1
+
frame_bury 1
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_0 // 0
+
intc_2 // 8
extract3
btoi
frame_dig -2
extract 0 8
btoi
==
bz label125
frame_dig 3
frame_dig 4
intc_3 // 24
*
intc_3 // 24
extract3
frame_dig -2
==
bz label126
intc_1 // 1
frame_bury 2
frame_dig 4
intc_3 // 24
*
pushbytes 0x000000000000000000000000000000000000000000000000 // 0x000000000000000000000000000000000000000000000000
bytec_3 // "sps"
frame_dig -1
concat
cover 2
box_replace
b label125
label126:
frame_dig 0
intc_1 // 1
+
frame_bury 0
label125:
frame_dig 4
intc_1 // 1
+
frame_bury 4
b label127
label123:
frame_dig 2
!
bz label128
err
label128:
bytec 5 // 0x00
intc_0 // 0
frame_dig 0
intc_0 // 0
==
setbit
intc_1 // 1
frame_dig 1
intc_0 // 0
==
setbit
frame_bury 0
popn 4
retsub
label59:
proto 3 0
bytec_1 // ""
dupn 2
intc 17 // 900
intc 22 // 192
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_bury 0
pushint 225
intc_1 // 1
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 1
frame_dig -3
intc_1 // 1
>=
dup
bz label129
frame_dig -3
intc_2 // 8
<=
&&
label129:
assert
intc_0 // 0
frame_bury 2
label132:
frame_dig 2
frame_dig 1
<
bz label130
frame_dig 0
intc_0 // 0
frame_dig -3
intc_1 // 1
-
intc_3 // 24
*
+
intc_0 // 0
+
frame_dig 2
intc_2 // 8
*
+
intc_2 // 8
extract3
btoi
intc_0 // 0
==
bz label131
intc 17 // 900
frame_dig -3
intc_1 // 1
-
intc_3 // 24
*
+
intc_0 // 0
+
frame_dig 2
intc_2 // 8
*
+
frame_dig -2
itob
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_replace
retsub
label131:
frame_dig 2
intc_1 // 1
+
frame_bury 2
b label132
label130:
err
retsub
label62:
proto 2 0
bytec_1 // ""
dupn 8
intc 36 // 80
intc_1 // 1
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 0
frame_dig 0
intc_0 // 0
==
bz label133
retsub
label133:
txn Sender
frame_bury 1
intc_0 // 0
intc 9 // 242
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
frame_bury 2
frame_dig 0
intc_1 // 1
==
dup
bnz label134
frame_dig 0
intc 10 // 2
==
||
label134:
dup
bnz label135
frame_dig 0
intc 8 // 3
==
||
label135:
bz label136
frame_dig -2
intc_0 // 0
!=
assert
intc 37 // 145
intc_2 // 8
bytec_0 // "v"
frame_dig -1
itob
concat
cover 2
box_extract
btoi
frame_bury 3
frame_dig 3
intc_0 // 0
==
bz label137
intc_1 // 1
frame_bury 3
label137:
frame_dig 1
frame_dig -2
asset_holding_get AssetBalance
pop
frame_dig 3
>=
assert
label136:
frame_dig 0
intc_1 // 1
==
bz label138
frame_dig -2
asset_params_get AssetCreator
pop
frame_dig 2
extract 81 32
==
assert
label138:
frame_dig 0
intc 10 // 2
==
bz label139
intc_0 // 0
frame_bury 4
frame_dig 2
extract 113 32
dup
frame_bury 5
extract 0 8
btoi
frame_bury 6
intc_0 // 0
frame_bury 7
label142:
frame_dig -2
frame_dig 6
==
bz label140
intc_1 // 1
frame_bury 4
b label141
label140:
frame_dig 7
intc_2 // 8
+
dup
intc 6 // 32
<
bz label141
frame_bury 7
frame_dig 5
frame_dig 7
intc_2 // 8
extract3
btoi
frame_bury 6
b label142
label141:
frame_dig 4
assert
label139:
frame_dig 0
intc 8 // 3
==
bz label143
frame_dig -2
asset_params_get AssetCreator
pop
frame_dig 2
extract 113 8
btoi
callsub label144
assert
label143:
frame_dig 0
intc 15 // 4
==
bz label145
frame_dig -2
frame_bury 8
frame_dig 8
callsub label43
assert
frame_dig 8
bytec 10 // "i.owner.a"
app_global_get_ex
assert
frame_dig 1
==
dup
bnz label146
frame_dig 1
frame_dig 8
callsub label144
||
label146:
assert
frame_dig 8
pushbytes 0x692e706172656e744170704944 // "i.parentAppID"
app_global_get_ex
assert
btoi
frame_dig 2
extract 113 8
btoi
==
assert
label145:
retsub
label43:
proto 1 1
bytec_1 // ""
frame_dig -1
pushbytes 0x692e6e616d65 // "i.name"
app_global_get_ex
assert
frame_bury 0
itxn_begin
intc 7 // 6
itxn_field TypeEnum
pushbytes 0x4be22fc6 // 0x4be22fc6
itxn_field ApplicationArgs
intc 28 // 0
itxn_field ApplicationID
frame_dig 0
dup
len
itob
extract 6 2
swap
concat
itxn_field ApplicationArgs
frame_dig -1
itob
itxn_field ApplicationArgs
intc_0 // 0
itxn_field Fee
itxn_submit
itxn NumLogs
intc_1 // 1
-
itxnas Logs
extract 4 0
intc_0 // 0
getbit
frame_bury 0
retsub
label144:
proto 2 1
bytec_1 // ""
dupn 2
itxn_begin
intc 7 // 6
itxn_field TypeEnum
frame_dig -1
itxn_field ApplicationID
pushbytes 0x726561645f70726f7065727479 // "read_property"
itxn_field ApplicationArgs
pushbytes 0x762e6361416c676f2e302e6173 // "v.caAlgo.0.as"
itxn_field ApplicationArgs
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
frame_bury 0
intc_0 // 0
frame_bury 1
label151:
frame_dig 1
frame_dig 0
len
<
bz label147
frame_dig 0
frame_dig 1
intc 6 // 32
extract3
frame_bury 2
frame_dig 2
global ZeroAddress
!=
dup
bz label148
frame_dig 2
frame_dig -2
==
&&
label148:
bz label149
intc_1 // 1
b label150
label149:
frame_dig 1
intc 6 // 32
+
frame_bury 1
b label151
label147:
intc_0 // 0
label150:
frame_bury 0
popn 2
retsub
label15:
proto 0 1
bytec_1 // ""
callsub label152
frame_bury 0
frame_dig 0
pushint 100
mulw
intc_0 // 0
intc 32 // 1000
divmodw
pop
pop
swap
!
assert
frame_bury 0
retsub
label14:
proto 0 1
bytec_1 // ""
callsub label152
frame_bury 0
frame_dig 0
pushint 150
mulw
intc_0 // 0
intc 32 // 1000
divmodw
pop
pop
swap
!
assert
frame_bury 0
retsub
label13:
proto 0 1
global PayoutsMaxBalance
retsub
label152:
proto 0 1
online_stake
retsub
label11:
proto 7 1
bytec_1 // ""
intc 16 // 100000
frame_bury 0
frame_dig 0
frame_dig -1
intc 16 // 100000
*
+
frame_bury 0
frame_dig 0
frame_dig -2
intc 16 // 100000
*
+
frame_bury 0
frame_dig 0
frame_dig -3
intc 16 // 100000
*
+
frame_bury 0
frame_dig 0
frame_dig -4
intc 33 // 28500
*
+
frame_bury 0
frame_dig 0
frame_dig -6
intc 33 // 28500
*
+
frame_bury 0
frame_dig 0
frame_dig -5
intc 34 // 50000
*
+
frame_bury 0
frame_dig 0
frame_dig -7
intc 34 // 50000
*
+
frame_bury 0
frame_dig 0
frame_bury 0
retsub
label10:
proto 1 1
pushint 2500
frame_dig -1
pushint 400
*
+
retsub
label3:
pushbytes 0xb8447b36 // 0xb8447b36
txna ApplicationArgs 0
match label153
err
label1:
pushbytes 0x1b5e82c6 // 0x1b5e82c6
pushbytes 0x79472d83 // 0x79472d83
pushbytes 0x5f7acfd9 // 0x5f7acfd9
pushbytes 0x3172ca9d // 0x3172ca9d
pushbytes 0x8a87142d // 0x8a87142d
pushbytes 0xd1366cc3 // 0xd1366cc3
pushbytes 0x3b045c5c // 0x3b045c5c
pushbytes 0x75aff61d // 0x75aff61d
pushbytes 0x1f2f0109 // 0x1f2f0109
pushbytes 0x2fa22c4b // 0x2fa22c4b
pushbytes 0x910e94ac // 0x910e94ac
pushbytes 0x572767d1 // 0x572767d1
pushbytes 0x9b504aaf // 0x9b504aaf
pushbytes 0xfbc63178 // 0xfbc63178
pushbytes 0x24498cf4 // 0x24498cf4
pushbytes 0xf846dd7a // 0xf846dd7a
pushbytes 0x83050501 // 0x83050501
pushbytes 0x7bbb6c8d // 0x7bbb6c8d
pushbytes 0xf839414a // 0xf839414a
pushbytes 0x0c317cfb // 0x0c317cfb
pushbytes 0x3e288972 // 0x3e288972
pushbytes 0xdd5faada // 0xdd5faada
pushbytes 0x18aac7a7 // 0x18aac7a7
pushbytes 0xf99ef54d // 0xf99ef54d
pushbytes 0x10809d4d // 0x10809d4d
pushbytes 0xe778dd5a // 0xe778dd5a
pushbytes 0xbf5259d0 // 0xbf5259d0
pushbytes 0x4df8d86e // 0x4df8d86e
pushbytes 0x418fcefc // 0x418fcefc
pushbytes 0xa2dc51b5 // 0xa2dc51b5
pushbytes 0x2873f504 // 0x2873f504
pushbytes 0x0547f4fe // 0x0547f4fe
pushbytes 0xcb668358 // 0xcb668358
txna ApplicationArgs 0
match label154 label155 label156 label157 label158 label159 label160 label161 label162 label163 label164 label165 label166 label167 label168 label169 label170 label171 label172 label173 label174 label175 label176 label177 label178 label179 label180 label181 label182 label183 label184 label185 label186
err
