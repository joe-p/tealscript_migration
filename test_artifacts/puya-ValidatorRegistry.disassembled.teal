#pragma version 10
intcblock 0 1 18 24 268 432 200 700 900 192 0 1000000 226 209 4096 278 252 74100
bytecblock 0x76 0x151f7c75 0x 0x7374616b6564 0x706f6f6c54656d706c617465417070726f76616c4279746573 0x6e756d5374616b657273 0x00 0x737073 0x696e6974 0x6e756d56 0x000100000000000003e8 0x692e6f776e65722e61 0x000200071afd498d00000000000000000096 0x0000 0x69735f76616c69645f6e66645f6170706964 0x068101 0x00000000000000000000000000000001 0x63f3f28b
txn NumAppArgs
bz label1
pushbytess 0x46f76533 0xb8447b36 0x1b5e82c6 0x79472d83 0x5f7acfd9 0x3172ca9d 0x8a87142d 0xd1366cc3 0x3b045c5c 0x75aff61d 0x1f2f0109 0x2fa22c4b 0x910e94ac 0x572767d1 0x9b504aaf 0xfbc63178 0x24498cf4 0xf846dd7a 0x83050501 0x7bbb6c8d 0xf839414a 0x0c317cfb 0x3e288972 0xdd5faada 0x18aac7a7 0xf99ef54d 0x10809d4d 0xe778dd5a 0xbf5259d0 0x4df8d86e 0x418fcefc 0xa2dc51b5 0x2873f504 0x0547f4fe 0xcb668358
txna ApplicationArgs 0
match label2 label3 label4 label5 label6 label7 label8 label9 label10 label11 label12 label13 label14 label15 label16 label17 label18 label19 label20 label21 label22 label23 label24 label25 label26 label27 label28 label29 label30 label31 label32 label33 label34 label35 label36
label1:
intc_0 // 0
return
label36:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
callsub label37
itob
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label35:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
callsub label38
intc_1 // 1
return
label34:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
btoi
callsub label39
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label33:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
txna ApplicationArgs 5
intc_0 // 0
getbit
callsub label40
intc_1 // 1
return
label32:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
txna ApplicationArgs 5
btoi
callsub label41
intc_1 // 1
return
label31:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label42
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label30:
txn OnCompletion
!
assert
txn ApplicationID
assert
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub label43
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label29:
txn OnCompletion
!
assert
txn ApplicationID
assert
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub label44
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label28:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
txna ApplicationArgs 4
txna ApplicationArgs 5
btoi
txna ApplicationArgs 6
btoi
callsub label45
intc_1 // 1
return
label27:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
callsub label46
intc_1 // 1
return
label26:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
extract 2 0
callsub label47
intc_1 // 1
return
label25:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
callsub label48
intc_1 // 1
return
label24:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
callsub label49
intc_1 // 1
return
label23:
txn OnCompletion
!
assert
txn ApplicationID
assert
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
txna ApplicationArgs 1
extract 2 0
txna ApplicationArgs 2
callsub label50
itob
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label22:
txn OnCompletion
!
assert
txn ApplicationID
assert
intc 10 // 0
itob
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label21:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label51
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label20:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label52
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label19:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
callsub label53
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label18:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
callsub label54
bytec 6 // 0x00
intc_0 // 0
uncover 2
setbit
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label17:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label55
itob
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label16:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
callsub label56
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label15:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
callsub label57
itob
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label14:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label58
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label13:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label59
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label12:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label60
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label11:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label61
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label10:
txn OnCompletion
!
assert
txn ApplicationID
assert
callsub label62
itob
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label9:
txn OnCompletion
!
assert
txn ApplicationID
assert
callsub label63
bytec_1 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label8:
txn OnCompletion
!
assert
txn ApplicationID
assert
pushbytes 0x151f7c75000000000006c21400000000000eb3ac00000000004fbb540000000000012174 // 0x151f7c75000000000006c21400000000000eb3ac00000000004fbb540000000000012174
log
intc_1 // 1
return
label7:
txn OnCompletion
!
assert
txn ApplicationID
assert
intc_1 // 1
return
label6:
txn OnCompletion
!
assert
txn ApplicationID
assert
callsub label64
intc_1 // 1
return
label5:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
extract 2 0
callsub label65
intc_1 // 1
return
label4:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
callsub label66
intc_1 // 1
return
label3:
txn OnCompletion
!
assert
txn ApplicationID
!
assert
callsub label67
intc_1 // 1
return
label2:
txn OnCompletion
pushint 4
==
assert
txn ApplicationID
assert
callsub label68
intc_1 // 1
return
label124:
proto 2 0
frame_dig -2
pushint 10
+
label72:
frame_dig 0
global OpcodeBudget
>
bz label69
itxn_begin
pushint 6
itxn_field TypeEnum
pushint 5
itxn_field OnCompletion
bytec 15 // 0x068101
itxn_field ApprovalProgram
bytec 15 // 0x068101
itxn_field ClearStateProgram
frame_dig -1
switch label70 label71
label73:
itxn_submit
b label72
label71:
global MinTxnFee
itxn_field Fee
b label73
label70:
intc_0 // 0
itxn_field Fee
b label73
label69:
retsub
label78:
proto 2 3
intc_0 // 0
bytec_2 // ""
dup
bytec 16 // 0x00000000000000000000000000000001
frame_dig -2
intc_0 // 0
extract_uint16
intc_0 // 0
label75:
frame_dig 5
frame_dig 4
<
bz label74
frame_dig -2
extract 2 0
frame_dig 5
dup
cover 2
pushint 8
*
extract_uint64
itob
frame_dig 3
b*
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
frame_bury 3
intc_1 // 1
+
frame_bury 5
b label75
label74:
bytec 16 // 0x00000000000000000000000000000001
frame_bury 0
frame_dig -1
intc_0 // 0
extract_uint16
frame_bury 1
intc_0 // 0
frame_bury 2
label77:
frame_dig 2
frame_dig 1
<
bz label76
frame_dig -1
extract 2 0
frame_dig 2
dup
cover 2
pushint 8
*
extract_uint64
itob
frame_dig 0
b*
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
frame_bury 0
intc_1 // 1
+
frame_bury 2
b label77
label76:
frame_dig 3
frame_dig 0
b/
dup
len
pushint 8
<=
assert
pushint 8
bzero
b|
btoi
frame_dig -2
frame_dig -1
frame_bury 2
frame_bury 1
frame_bury 0
retsub
label68:
txn Sender
pushbytes 0x5e795d223558ae54ab91226bc980c451313068cc8fa62d6f9c7076bd80bb65af // addr LZ4V2IRVLCXFJK4REJV4TAGEKEYTA2GMR6TC2344OB3L3AF3MWXZ6ZAFIQ
==
assert
bytec 4 // "poolTemplateApprovalBytes"
box_del
pop
bytec 8 // "init"
intc_0 // 0
app_global_put
retsub
label67:
bytec 8 // "init"
intc_0 // 0
app_global_put
bytec 9 // "numV"
intc_0 // 0
app_global_put
bytec 5 // "numStakers"
intc_0 // 0
app_global_put
bytec_3 // "staked"
intc_0 // 0
app_global_put
pushbytes 0x70726f6772616d56657273696f6e // "programVersion"
pushint 10
app_global_put
retsub
label66:
proto 1 0
bytec 4 // "poolTemplateApprovalBytes"
frame_dig -1
box_create
pop
retsub
label65:
proto 2 0
intc_0 // 0
bytec 8 // "init"
app_global_get_ex
assert
!
assert
bytec 4 // "poolTemplateApprovalBytes"
frame_dig -2
frame_dig -1
box_replace
retsub
label64:
bytec 8 // "init"
intc_1 // 1
app_global_put
retsub
label63:
bytec 12 // 0x000200071afd498d00000000000000000096
bytec 10 // 0x000100000000000003e8
callsub label78
popn 2
pushbytes 0x000200071afd498d00000000000000000064 // 0x000200071afd498d00000000000000000064
bytec 10 // 0x000100000000000003e8
callsub label78
popn 2
swap
itob
pushbytes 0x000000000000000100000000000f4240000000000000000000000000000f424000000000000f424000003faa25226000 // 0x000000000000000100000000000f4240000000000000000000000000000f424000000000000f424000003faa25226000
swap
concat
swap
itob
concat
pushint 8
itob
concat
pushint 3
itob
concat
intc 6 // 200
itob
concat
retsub
label62:
intc_0 // 0
bytec 9 // "numV"
app_global_get_ex
assert
retsub
label61:
proto 1 1
frame_dig -1
itob
bytec_0 // "v"
swap
concat
box_get
assert
extract 0 242
retsub
label60:
proto 1 1
frame_dig -1
itob
bytec_0 // "v"
swap
concat
box_get
assert
extract 242 26
retsub
label59:
proto 1 1
frame_dig -1
itob
bytec_0 // "v"
swap
concat
box_get
assert
extract 0 242
dup
extract 8 32
swap
extract 40 32
concat
retsub
label58:
proto 1 1
intc_0 // 0
bytec 13 // 0x0000
frame_dig -1
itob
bytec_0 // "v"
swap
concat
box_get
assert
intc_0 // 0
label80:
frame_dig 3
intc_3 // 24
<
bz label79
frame_dig 2
intc 4 // 268
intc 5 // 432
extract3
frame_dig 3
intc_2 // 18
*
intc_2 // 18
extract3
dup
frame_bury 0
intc_0 // 0
extract_uint64
bz label79
frame_dig 1
dup
frame_dig 0
concat
swap
intc_0 // 0
extract_uint16
intc_1 // 1
+
itob
extract 6 2
replace2 0
frame_bury 1
frame_dig 3
intc_1 // 1
+
frame_bury 3
b label80
label79:
frame_dig 1
frame_bury 0
retsub
label57:
proto 2 1
frame_dig -1
bz label81
frame_dig -2
itob
bytec_0 // "v"
swap
concat
box_len
bury 1
assert
frame_dig -1
intc_3 // 24
<=
bz label81
intc_1 // 1
label82:
assert
frame_dig -2
itob
bytec_0 // "v"
swap
concat
box_get
assert
frame_dig -1
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
swap
intc_2 // 18
*
intc_2 // 18
extract3
intc_0 // 0
extract_uint64
retsub
label81:
intc_0 // 0
b label82
label56:
proto 1 1
frame_dig -1
intc_0 // 0
extract_uint64
itob
bytec_0 // "v"
swap
concat
box_get
assert
frame_dig -1
pushint 8
extract_uint64
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
swap
intc_2 // 18
*
intc_2 // 18
extract3
retsub
label55:
proto 1 1
bytec_2 // ""
frame_dig -1
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
extract 242 26
bytec 12 // 0x000200071afd498d00000000000000000096
bytec 10 // 0x000100000000000003e8
callsub label78
popn 2
swap
intc_0 // 0
extract_uint16
/
swap
box_get
assert
extract 0 242
pushint 217
extract_uint64
dup
bnz label83
pushint 70000000000000
frame_bury 2
label83:
frame_dig 2
dup
frame_bury 0
frame_dig 1
>
bz label84
frame_dig 1
frame_bury 0
label84:
retsub
label54:
proto 1 1
bytec 7 // "sps"
frame_dig -1
concat
box_len
bury 1
!
retsub
label53:
proto 1 1
intc_0 // 0
dupn 3
bytec_2 // ""
bytec 7 // "sps"
frame_dig -1
concat
dup
box_len
bury 1
bnz label85
bytec 13 // 0x0000
frame_bury 0
retsub
label85:
bytec 13 // 0x0000
frame_bury 2
frame_dig 5
box_get
swap
frame_bury 1
assert
intc_0 // 0
frame_bury 4
label88:
frame_dig 4
pushint 6
<
bz label86
frame_dig 4
intc_3 // 24
*
frame_dig 1
swap
intc_3 // 24
extract3
dup
frame_bury 0
intc_0 // 0
extract_uint64
frame_dig 2
frame_bury 3
bz label87
frame_dig 2
dup
frame_dig 0
concat
swap
intc_0 // 0
extract_uint16
intc_1 // 1
+
itob
extract 6 2
replace2 0
frame_bury 3
label87:
frame_dig 3
frame_bury 2
frame_dig 4
intc_1 // 1
+
frame_bury 4
b label88
label86:
frame_dig 2
frame_bury 0
retsub
label52:
proto 1 1
frame_dig -1
itob
bytec_0 // "v"
swap
concat
box_get
assert
intc 7 // 700
intc 6 // 200
extract3
retsub
label51:
proto 1 1
frame_dig -1
itob
bytec_0 // "v"
swap
concat
dup
box_len
bury 1
assert
box_get
pop
intc 8 // 900
intc 9 // 192
extract3
retsub
label50:
proto 3 1
bytec_2 // ""
dupn 4
frame_dig -1
extract 80 1
frame_dig -1
pushint 80
getbyte
pushint 4
<=
bz label89
intc_1 // 1
label102:
assert
frame_dig -1
pushint 169
extract_uint32
dup
frame_bury 1
bz label90
frame_dig 1
intc 11 // 1000000
<=
bz label90
intc_1 // 1
label101:
assert
frame_dig -1
pushint 173
extract_uint32
dup
frame_bury 2
intc 11 // 1000000
<=
bz label91
intc_1 // 1
label100:
assert
frame_dig 2
bz label92
frame_dig -1
extract 177 32
global ZeroAddress
!=
assert
label92:
frame_dig -1
intc 13 // 209
extract_uint64
intc 11 // 1000000
>=
assert
frame_dig -1
pushint 225
getbyte
dup
frame_bury 0
bz label93
frame_dig 0
pushint 3
<=
bz label93
intc_1 // 1
label99:
assert
frame_dig -1
intc 12 // 226
extract_uint64
dup
frame_bury 4
bz label94
frame_dig 4
global LatestTimestamp
>
assert
label94:
frame_dig -1
extract 8 32
dup
global ZeroAddress
!=
assert
frame_dig -1
extract 40 32
global ZeroAddress
!=
assert
txn Sender
==
assert
frame_dig -3
gtxns Amount
pushint 442900
==
assert
frame_dig -3
gtxns Fee
pushint 10000000
>
assert
intc_0 // 0
bytec 9 // "numV"
app_global_get_ex
assert
intc_1 // 1
+
dup
frame_bury 3
bytec 9 // "numV"
dig 1
app_global_put
itob
bytec_0 // "v"
dig 1
concat
dup
pushint 1092
box_create
pop
dup
intc_0 // 0
frame_dig -1
box_replace
intc_0 // 0
uncover 2
box_replace
frame_dig -1
pushint 72
extract_uint64
dup
frame_bury 4
bz label95
itxn_begin
intc 10 // 0
frame_dig 4
dup
itob
dig 1
itxn_field Applications
bytec 14 // "is_valid_nfd_appid"
itxn_field ApplicationArgs
frame_dig -2
itxn_field ApplicationArgs
itxn_field ApplicationArgs
swap
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
btoi
intc_1 // 1
==
assert
bytec 11 // "i.owner.a"
app_global_get_ex
pop
txn Sender
==
assert
label95:
frame_dig 5
pushbytes 0x03 // 0x03
==
bnz label96
frame_dig 5
pushbytes 0x04 // 0x04
==
bz label97
label96:
frame_dig -1
extract 113 32
intc_0 // 0
extract_uint64
callsub label98
assert
label97:
frame_dig 3
frame_bury 0
retsub
label93:
intc_0 // 0
b label99
label91:
intc_0 // 0
b label100
label90:
intc_0 // 0
b label101
label89:
intc_0 // 0
b label102
label49:
proto 2 0
txn Sender
frame_dig -2
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
extract 0 242
extract 8 32
uncover 2
==
assert
pushint 40
frame_dig -1
box_replace
retsub
label48:
proto 3 0
txn Sender
frame_dig -3
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
extract 0 242
extract 8 32
uncover 2
==
assert
frame_dig -2
itob
dig 1
intc 12 // 226
uncover 2
box_replace
frame_dig -1
itob
pushint 234
swap
box_replace
retsub
label47:
proto 3 0
txn Sender
frame_dig -3
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
extract 0 242
extract 8 32
uncover 2
==
assert
itxn_begin
intc 10 // 0
txn Sender
frame_dig -2
itob
bytec 14 // "is_valid_nfd_appid"
itxn_field ApplicationArgs
frame_dig -1
itxn_field ApplicationArgs
dup
itxn_field ApplicationArgs
swap
itxn_field Accounts
intc_0 // 0
itxn_field OnCompletion
swap
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
frame_dig -2
bytec 11 // "i.owner.a"
app_global_get_ex
pop
txn Sender
==
assert
pushint 72
swap
box_replace
retsub
label46:
proto 2 0
txn Sender
frame_dig -2
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
extract 0 242
extract 8 32
uncover 2
==
assert
frame_dig -1
global ZeroAddress
!=
assert
pushint 177
frame_dig -1
box_replace
retsub
label45:
proto 6 0
txn Sender
frame_dig -6
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
extract 0 242
extract 8 32
uncover 2
==
assert
dup
pushint 80
frame_dig -5
box_replace
dup
pushint 81
frame_dig -4
box_replace
dup
pushint 113
frame_dig -3
box_replace
frame_dig -2
itob
dig 1
pushint 145
uncover 2
box_replace
frame_dig -1
itob
pushint 161
swap
box_replace
retsub
label44:
proto 3 1
txn Sender
frame_dig -2
itob
dup
cover 2
bytec_0 // "v"
swap
concat
dup
cover 2
box_get
assert
extract 0 242
extract 8 32
==
bnz label103
txn Sender
frame_dig 1
box_get
assert
extract 0 242
extract 40 32
==
bz label104
label103:
intc_1 // 1
label106:
assert
frame_dig -3
gtxns Amount
pushint 963500
==
frame_dig -3
gtxns Receiver
global CurrentApplicationAddress
==
&&
assert
frame_dig 1
dup
box_len
bury 1
assert
dup
box_get
pop
dup
extract 242 26
intc_0 // 0
extract_uint16
dup
intc_3 // 24
>=
!
assert
intc_1 // 1
+
itxn_begin
bytec 4 // "poolTemplateApprovalBytes"
intc_0 // 0
intc 14 // 4096
box_extract
bytec 4 // "poolTemplateApprovalBytes"
box_len
pop
intc 14 // 4096
-
bytec 4 // "poolTemplateApprovalBytes"
intc 14 // 4096
uncover 2
box_extract
global CurrentApplicationID
itob
dig 3
itob
uncover 5
extract 0 242
intc 13 // 209
extract_uint64
itob
pushbytes 0x59e90aa6 // 0x59e90aa6
itxn_field ApplicationArgs
uncover 2
itxn_field ApplicationArgs
frame_dig 0
dup
cover 6
itxn_field ApplicationArgs
dig 1
itxn_field ApplicationArgs
itxn_field ApplicationArgs
pushint 3
itxn_field ExtraProgramPages
pushint 3
itxn_field GlobalNumByteSlice
pushint 11
itxn_field GlobalNumUint
pushbytes 0x0a810143 // 0x0a810143
itxn_field ClearStateProgramPages
uncover 2
itxn_field ApprovalProgramPages
swap
itxn_field ApprovalProgramPages
intc_0 // 0
itxn_field OnCompletion
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
dup
bitlen
pushint 16
<=
assert
dup
extract 6 2
dig 4
pushint 242
uncover 2
box_replace
itxn CreatedApplicationID
uncover 2
intc_1 // 1
-
dig 1
itob
dig 1
intc_3 // 24
<
assert
swap
intc_2 // 18
*
intc 4 // 268
+
uncover 5
swap
uncover 2
box_replace
frame_dig -2
swap
frame_dig -1
callsub label105
itxn CreatedApplicationID
cover 2
concat
swap
itob
concat
frame_bury 0
retsub
label104:
intc_0 // 0
b label106
label43:
proto 3 1
intc_0 // 0
dupn 7
bytec_2 // ""
dupn 13
frame_dig -2
itob
bytec_0 // "v"
swap
concat
dupn 2
box_len
bury 1
assert
box_get
pop
extract 0 242
intc 12 // 226
extract_uint64
bz label107
frame_dig 22
box_get
assert
extract 0 242
intc 12 // 226
extract_uint64
global LatestTimestamp
<
assert
label107:
txn Sender
dup
frame_bury 5
frame_dig -3
gtxns Sender
dup
frame_bury 7
==
frame_dig -3
gtxns Receiver
global CurrentApplicationAddress
==
&&
assert
frame_dig 22
dup
box_get
assert
extract 242 26
pushint 10
extract_uint64
bytec 12 // 0x000200071afd498d00000000000000000096
bytec 10 // 0x000100000000000003e8
callsub label78
popn 2
<
assert
box_get
assert
extract 0 242
pushint 80
getbyte
dup
frame_bury 20
bz label108
txn Sender
frame_bury 6
frame_dig 22
box_get
swap
frame_bury 0
assert
frame_dig 20
intc_1 // 1
==
dup
frame_bury 19
bnz label109
frame_dig 20
pushint 2
==
bnz label109
frame_dig 20
pushint 3
==
bz label110
label109:
frame_dig -1
assert
frame_dig 6
frame_dig -1
asset_holding_get AssetBalance
pop
assert
label110:
frame_dig 19
bz label111
frame_dig -1
asset_params_get AssetCreator
assert
frame_dig 0
extract 0 242
extract 81 32
==
assert
label111:
frame_dig 20
pushint 2
==
bz label112
frame_dig -1
assert
intc_0 // 0
frame_bury 10
intc_0 // 0
frame_bury 15
label128:
frame_dig 15
pushint 4
<
bz label113
frame_dig 0
extract 0 242
extract 113 32
frame_dig 15
pushint 8
*
extract_uint64
frame_dig -1
==
bz label114
intc_1 // 1
frame_bury 10
label113:
frame_dig 10
assert
label112:
frame_dig 20
pushint 3
==
bz label115
frame_dig 0
extract 0 242
extract 113 32
intc_0 // 0
extract_uint64
frame_dig -1
asset_params_get AssetCreator
assert
callsub label116
assert
label115:
frame_dig 20
pushint 4
==
bz label108
frame_dig -1
callsub label98
assert
frame_dig -1
bytec 11 // "i.owner.a"
app_global_get_ex
pop
frame_dig 6
==
bnz label117
frame_dig -1
frame_dig 6
callsub label116
bz label118
label117:
intc_1 // 1
label127:
assert
frame_dig -1
pushbytes 0x692e706172656e744170704944 // "i.parentAppID"
app_global_get_ex
pop
frame_dig 0
extract 0 242
extract 113 32
intc_0 // 0
extract_uint64
==
assert
label108:
frame_dig -3
gtxns Amount
dup
frame_bury 17
intc_0 // 0
frame_bury 16
bytec 7 // "sps"
frame_dig 5
concat
dup
frame_bury 2
box_len
bury 1
swap
frame_bury 18
bnz label119
intc 17 // 74100
frame_bury 16
frame_dig 17
intc 17 // 74100
-
frame_bury 18
frame_dig 2
pushint 144
box_create
pop
label119:
frame_dig -2
frame_dig 5
frame_dig 18
callsub label39
dup
extract 0 24
dup
cover 2
frame_bury 3
dup
intc 9 // 192
getbit
frame_bury 14
pushint 193
getbit
frame_bury 13
pushint 8
extract_uint64
dup
frame_bury 21
!
!
assert
frame_dig 2
dup
box_len
bury 1
assert
box_get
pop
frame_bury 4
intc_0 // 0
frame_bury 8
intc_0 // 0
frame_bury 11
label123:
frame_dig 2
box_len
bury 1
assert
frame_dig 11
pushint 6
<
bz label120
frame_dig 11
intc_3 // 24
*
frame_dig 4
swap
intc_3 // 24
extract3
dup
frame_bury 1
frame_dig 3
==
bnz label121
frame_dig 8
dup
frame_bury 9
bnz label122
frame_dig 1
intc_0 // 0
extract_uint64
frame_dig 8
frame_bury 9
bnz label122
frame_dig 11
intc_1 // 1
+
frame_bury 9
label122:
frame_dig 9
frame_bury 8
frame_dig 11
intc_1 // 1
+
frame_bury 11
b label123
label121:
frame_dig 3
intc_0 // 0
extract_uint64
itob
bytec_0 // "v"
swap
concat
dup
frame_bury 22
dup
box_get
assert
frame_dig 21
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
dig 1
intc_2 // 18
*
swap
dig 1
intc_2 // 18
extract3
intc_0 // 0
extract_uint64
itxn_begin
frame_dig 17
frame_dig 16
-
dup
cover 2
frame_bury 12
dup
app_params_get AppAddress
assert
itxn_field Receiver
swap
itxn_field Amount
intc_1 // 1
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_next
pushbytes 0xf9c70cbd // 0xf9c70cbd
itxn_field ApplicationArgs
frame_dig 7
itxn_field ApplicationArgs
dup
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
gitxn 1 LastLog
extract 0 4
bytec_1 // 0x151f7c75
==
assert
pushint 500
intc_0 // 0
callsub label124
dup
bytec 5 // "numStakers"
app_global_get_ex
pop
swap
bytec_3 // "staked"
app_global_get_ex
pop
swap
itob
dup
bitlen
pushint 16
<=
assert
extract 6 2
uncover 3
intc_3 // 24
<
assert
dig 2
pushint 276
+
dig 4
swap
uncover 2
box_replace
itob
swap
intc 15 // 278
+
swap
box_replace
frame_dig 14
bz label125
frame_dig 22
dup
box_get
assert
extract 242 26
pushint 2
extract_uint64
intc_1 // 1
+
itob
pushint 244
swap
box_replace
label125:
frame_dig 13
bz label126
intc_0 // 0
bytec 5 // "numStakers"
app_global_get_ex
assert
intc_1 // 1
+
bytec 5 // "numStakers"
swap
app_global_put
label126:
frame_dig 22
dup
box_get
assert
extract 242 26
pushint 10
extract_uint64
frame_dig 12
dup
cover 2
+
itob
uncover 2
intc 16 // 252
uncover 2
box_replace
intc_0 // 0
bytec_3 // "staked"
app_global_get_ex
assert
+
bytec_3 // "staked"
swap
app_global_put
frame_dig 3
frame_bury 0
retsub
label120:
frame_dig 8
dup
!
!
assert
intc_1 // 1
-
intc_3 // 24
*
frame_dig 2
swap
frame_dig 3
box_replace
b label121
label118:
intc_0 // 0
b label127
label114:
frame_dig 15
intc_1 // 1
+
frame_bury 15
b label128
label42:
proto 1 1
bytec_2 // ""
dupn 4
frame_dig -1
itob
bytec_0 // "v"
swap
concat
dup
box_get
assert
intc 4 // 268
intc 5 // 432
extract3
extract 0 18
intc_0 // 0
extract_uint64
dupn 2
assert
txn Sender
swap
app_params_get AppAddress
assert
!=
bz label129
frame_dig 5
box_get
assert
intc 7 // 700
intc 6 // 200
extract3
frame_bury 0
retsub
label129:
global Round
frame_bury 1
frame_dig 5
box_get
assert
intc 7 // 700
intc 6 // 200
extract3
intc 9 // 192
extract_uint64
dup
frame_bury 3
bz label130
frame_dig 6
pushbytes 0x6c6173745061796f7574 // "lastPayout"
app_global_get_ex
pop
frame_dig 3
==
bz label131
frame_dig 5
box_get
assert
intc 7 // 700
intc 6 // 200
extract3
frame_bury 0
retsub
label131:
frame_dig 5
box_get
assert
extract 0 242
pushint 169
extract_uint32
frame_dig 1
dup
cover 2
dig 1
%
uncover 2
swap
-
frame_dig 3
dup
uncover 3
%
-
==
bz label130
frame_dig 5
box_get
assert
intc 7 // 700
intc 6 // 200
extract3
frame_bury 0
retsub
label130:
frame_dig 1
itob
frame_dig 5
dup
cover 2
pushint 892
uncover 2
box_replace
box_get
pop
extract 242 26
dup
intc_0 // 0
extract_uint16
frame_bury 0
pushint 10
extract_uint64
frame_bury 4
intc_0 // 0
frame_bury 2
label133:
frame_dig 2
frame_dig 0
<
bz label132
frame_dig 5
dup
box_get
assert
intc 4 // 268
intc 5 // 432
extract3
frame_dig 2
dup
cover 2
intc_2 // 18
*
intc_2 // 18
extract3
pushint 10
extract_uint64
itob
pushbytes 0x0002 // 0x0002
swap
concat
intc 11 // 1000000
itob
concat
frame_dig 4
itob
pushbytes 0x0001 // 0x0001
swap
concat
callsub label78
popn 2
itob
dig 1
intc_3 // 24
<
assert
dig 1
pushint 8
*
intc 7 // 700
+
uncover 3
swap
uncover 2
box_replace
intc_1 // 1
+
frame_bury 2
b label133
label132:
frame_dig 5
box_get
assert
intc 7 // 700
intc 6 // 200
extract3
frame_bury 0
retsub
label41:
proto 5 0
intc_0 // 0
frame_dig -5
callsub label134
dup
frame_bury -5
intc_0 // 0
extract_uint64
itob
bytec_0 // "v"
swap
concat
dupn 2
box_get
assert
frame_dig -5
pushint 8
extract_uint64
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
dig 1
intc_2 // 18
*
swap
dig 1
intc_2 // 18
extract3
pushint 10
extract_uint64
frame_dig -4
+
itob
uncover 2
intc_3 // 24
<
assert
swap
intc 15 // 278
+
dig 2
swap
uncover 2
box_replace
dup
box_get
pop
extract 242 26
pushint 10
extract_uint64
frame_dig -4
+
itob
dig 1
intc 16 // 252
uncover 2
box_replace
dup
box_get
pop
extract 242 26
intc_2 // 18
extract_uint64
frame_dig -3
+
itob
dig 1
pushint 260
uncover 2
box_replace
intc_0 // 0
bytec_3 // "staked"
app_global_get_ex
assert
frame_dig -4
+
bytec_3 // "staked"
swap
app_global_put
box_get
pop
extract 0 242
dup
pushint 72
extract_uint64
dup
bz label135
frame_dig 3
bytec 11 // "i.owner.a"
app_global_get_ex
pop
dup
frame_bury 0
frame_dig 2
extract 8 32
!=
bz label135
frame_dig 2
extract 40 32
frame_dig 0
!=
bz label135
intc_0 // 0
itob
frame_dig 1
pushint 72
uncover 2
box_replace
label135:
retsub
label40:
proto 5 0
intc_0 // 0
dupn 5
bytec_2 // ""
dupn 10
pushint 300
intc_0 // 0
callsub label124
frame_dig -5
callsub label134
frame_bury -5
frame_dig -3
bnz label136
frame_dig -2
bz label137
label136:
intc_1 // 1
label147:
assert
frame_dig -5
intc_0 // 0
extract_uint64
itob
dup
frame_bury 4
bytec_0 // "v"
swap
concat
dup
frame_bury 2
dup
box_get
assert
frame_dig -5
pushint 8
extract_uint64
dup
frame_bury 16
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
dig 1
intc_2 // 18
*
dup
frame_bury 6
swap
dig 1
intc_2 // 18
extract3
pushint 10
extract_uint64
frame_dig -3
-
itob
uncover 2
intc_3 // 24
<
assert
swap
intc 15 // 278
+
dig 2
swap
uncover 2
box_replace
dup
box_get
pop
extract 242 26
pushint 10
extract_uint64
frame_dig -3
-
itob
intc 16 // 252
swap
box_replace
intc_0 // 0
bytec_3 // "staked"
app_global_get_ex
assert
frame_dig -3
-
bytec_3 // "staked"
swap
app_global_put
frame_dig -2
bz label138
frame_dig 2
dup
box_get
assert
dup
extract 0 242
dup
extract 153 8
frame_bury 1
pushint 153
extract_uint64
assert
extract 242 26
intc_2 // 18
extract_uint64
dup
frame_dig -2
>=
assert
frame_dig -2
-
itob
pushint 260
swap
box_replace
frame_dig 16
intc_1 // 1
!=
bz label138
itxn_begin
frame_dig 2
box_get
assert
intc 4 // 268
intc 5 // 432
extract3
extract 0 18
intc_0 // 0
extract_uint64
frame_dig -2
itob
bytec 17 // 0x63f3f28b
itxn_field ApplicationArgs
frame_dig -4
itxn_field ApplicationArgs
frame_dig 1
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
label138:
frame_dig -1
bz label139
frame_dig 2
dup
box_get
assert
intc 4 // 268
intc 5 // 432
extract3
frame_dig 6
dup
cover 2
intc_2 // 18
extract3
pushint 8
extract_uint16
intc_1 // 1
-
itob
dup
bitlen
pushint 16
<=
assert
extract 6 2
swap
pushint 276
+
swap
box_replace
frame_dig -5
pushint 16
extract_uint64
frame_dig 16
itob
frame_dig 4
swap
concat
swap
itob
concat
frame_bury -5
intc_0 // 0
frame_bury 12
intc_0 // 0
frame_bury 11
intc_0 // 0
frame_bury 8
bytec 7 // "sps"
frame_dig -4
concat
dup
frame_bury 3
box_get
swap
frame_bury 5
assert
intc_0 // 0
frame_bury 10
label144:
frame_dig 3
box_len
bury 1
assert
frame_dig 10
pushint 6
<
bz label140
frame_dig 10
intc_3 // 24
*
dup
frame_bury 7
frame_dig 5
swap
intc_3 // 24
extract3
dup
frame_bury 0
intc_0 // 0
extract_uint64
dup
frame_bury 15
bz label141
frame_dig 11
intc_1 // 1
+
frame_bury 11
frame_dig -5
intc_0 // 0
extract_uint64
frame_dig 15
==
frame_dig 8
frame_bury 9
frame_dig 12
frame_bury 13
bz label142
frame_dig 0
frame_dig -5
==
bz label143
intc_1 // 1
frame_bury 8
frame_dig 3
frame_dig 7
pushbytes 0x000000000000000000000000000000000000000000000000 // 0x000000000000000000000000000000000000000000000000
box_replace
label145:
frame_dig 8
frame_bury 9
frame_dig 12
frame_bury 13
label142:
frame_dig 9
frame_bury 8
frame_dig 13
frame_bury 12
label141:
frame_dig 10
intc_1 // 1
+
frame_bury 10
b label144
label143:
frame_dig 12
intc_1 // 1
+
frame_bury 12
b label145
label140:
frame_dig 8
assert
frame_dig 12
!
frame_dig 11
!
bytec 6 // 0x00
intc_0 // 0
uncover 3
setbit
intc_1 // 1
uncover 2
setbit
dup
intc_0 // 0
getbit
swap
intc_1 // 1
getbit
frame_bury 14
bz label146
frame_dig 2
dup
box_get
assert
extract 242 26
pushint 2
extract_uint64
intc_1 // 1
-
itob
pushint 244
swap
box_replace
label146:
frame_dig 14
bz label139
intc_0 // 0
bytec 5 // "numStakers"
app_global_get_ex
assert
intc_1 // 1
-
bytec 5 // "numStakers"
swap
app_global_put
label139:
retsub
label137:
intc_0 // 0
b label147
label39:
proto 3 1
intc_0 // 0
dupn 4
bytec_2 // ""
dupn 3
intc_1 // 1
dupn 3
frame_dig -3
callsub label55
cover 2
bytec 7 // "sps"
frame_dig -2
concat
dup
cover 3
box_len
bury 1
swap
cover 2
bz label148
frame_dig 12
box_get
swap
frame_bury 4
assert
frame_dig -3
assert
intc_0 // 0
frame_bury 6
label151:
frame_dig 6
pushint 6
<
bz label149
pushint 300
intc_0 // 0
callsub label124
frame_dig 6
intc_3 // 24
*
frame_dig 4
swap
intc_3 // 24
extract3
dup
frame_bury 1
intc_0 // 0
extract_uint64
dup
frame_bury 8
bz label150
intc_0 // 0
frame_bury 10
frame_dig 8
frame_dig -3
==
bz label150
intc_0 // 0
frame_bury 9
frame_dig -3
itob
bytec_0 // "v"
swap
concat
box_get
assert
frame_dig 1
pushint 8
extract_uint64
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
swap
intc_2 // 18
*
intc_2 // 18
extract3
pushint 10
extract_uint64
frame_dig -1
+
frame_dig 11
<=
bz label150
frame_dig 1
bytec 6 // 0x00
concat
frame_bury 0
retsub
label150:
frame_dig 6
intc_1 // 1
+
frame_bury 6
b label151
label149:
frame_dig 10
frame_bury 13
frame_dig 9
frame_bury 14
label148:
frame_dig 13
frame_bury 10
frame_dig 14
frame_bury 9
frame_dig -3
itob
dup
frame_bury 3
bytec_0 // "v"
swap
concat
box_get
swap
dup
cover 2
frame_bury 0
assert
dup
extract 0 242
intc 13 // 209
extract_uint64
frame_dig -1
<=
assert
extract 242 26
intc_0 // 0
extract_uint16
frame_bury 5
intc_0 // 0
frame_bury 7
label154:
frame_dig 7
frame_dig 5
<
bz label152
frame_dig 0
intc 4 // 268
intc 5 // 432
extract3
frame_dig 7
intc_2 // 18
*
intc_2 // 18
extract3
dup
frame_bury 2
pushint 10
extract_uint64
frame_dig -1
+
frame_dig 11
<=
bz label153
frame_dig 7
intc_1 // 1
+
frame_dig 2
intc_0 // 0
extract_uint64
swap
itob
frame_dig 3
swap
concat
swap
itob
concat
bytec 6 // 0x00
intc_0 // 0
frame_dig 9
setbit
intc_1 // 1
frame_dig 10
setbit
concat
frame_bury 0
retsub
label153:
frame_dig 7
intc_1 // 1
+
frame_bury 7
b label154
label152:
intc_0 // 0
itob
frame_dig 3
dig 1
concat
swap
concat
bytec 6 // 0x00
intc_0 // 0
frame_dig 9
setbit
intc_1 // 1
frame_dig 10
setbit
concat
frame_bury 0
retsub
label38:
proto 3 0
intc_0 // 0
bytec_2 // ""
dupn 4
txn Sender
frame_dig -3
itob
bytec_0 // "v"
swap
concat
dup
cover 2
box_get
assert
extract 0 242
extract 8 32
==
bnz label155
txn Sender
frame_dig 6
box_get
assert
extract 0 242
extract 40 32
==
bz label156
label155:
intc_1 // 1
label163:
assert
frame_dig 6
box_get
swap
frame_bury 0
assert
frame_dig -1
bz label157
frame_dig -1
pushint 8
<=
bz label157
intc_1 // 1
label162:
assert
intc_0 // 0
frame_bury 4
label161:
frame_dig 4
pushint 8
<
assert
intc_0 // 0
frame_bury 3
label160:
frame_dig 3
pushint 3
<
dup
frame_bury 5
bz label158
frame_dig 0
intc 8 // 900
intc 9 // 192
extract3
extract 0 192
frame_dig 4
intc_3 // 24
*
dup
frame_bury 1
intc_3 // 24
extract3
extract 0 24
frame_dig 3
pushint 8
*
dup
frame_bury 2
extract_uint64
frame_dig -2
==
bz label159
frame_dig -1
intc_1 // 1
-
frame_dig 4
!=
assert
intc_0 // 0
itob
intc 8 // 900
frame_dig 1
+
frame_dig 5
assert
frame_dig 2
+
frame_dig 6
swap
uncover 2
box_replace
itxn_begin
pushbytes 0x51ef3b21 // 0x51ef3b21
itxn_field ApplicationArgs
frame_dig -2
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
frame_dig -3
frame_dig -2
frame_dig -1
callsub label105
retsub
label159:
frame_dig 3
intc_1 // 1
+
frame_bury 3
b label160
label158:
frame_dig 4
intc_1 // 1
+
frame_bury 4
b label161
label157:
intc_0 // 0
b label162
label156:
intc_0 // 0
b label163
label37:
proto 2 1
txn Sender
frame_dig -2
itob
bytec_0 // "v"
swap
concat
box_get
assert
dup
extract 0 242
dup
extract 8 32
uncover 3
==
assert
dup
extract 153 8
swap
pushint 153
extract_uint64
dig 2
extract 242 26
intc_2 // 18
extract_uint64
dig 1
assert
uncover 3
intc 4 // 268
intc 5 // 432
extract3
extract 0 18
intc_0 // 0
extract_uint64
dup
app_params_get AppAddress
assert
dig 3
asset_holding_get AssetBalance
pop
dig 2
-
itxn_begin
dup
itob
bytec 17 // 0x63f3f28b
itxn_field ApplicationArgs
frame_dig -1
itxn_field ApplicationArgs
uncover 5
itxn_field ApplicationArgs
itxn_field ApplicationArgs
dig 1
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
swap
app_params_get AppAddress
assert
uncover 3
asset_holding_get AssetBalance
pop
uncover 2
==
assert
retsub
label134:
proto 1 1
frame_dig -1
intc_0 // 0
extract_uint64
itob
bytec_0 // "v"
swap
concat
dup
box_len
bury 1
assert
frame_dig -1
pushint 8
extract_uint64
dupn 2
intc_3 // 24
<=
assert
bz label164
frame_dig 0
box_get
assert
extract 242 26
intc_0 // 0
extract_uint16
frame_dig 1
>=
bz label164
intc_1 // 1
label165:
assert
frame_dig -1
pushint 16
extract_uint64
frame_dig 0
box_get
assert
frame_dig 1
intc_1 // 1
-
swap
intc 4 // 268
intc 5 // 432
extract3
swap
intc_2 // 18
*
intc_2 // 18
extract3
intc_0 // 0
extract_uint64
dig 1
==
assert
txn Sender
dig 1
app_params_get AppAddress
assert
==
assert
dup
pushbytes 0x76616c696461746f724964 // "validatorId"
app_global_get_ex
pop
swap
pushbytes 0x706f6f6c4964 // "poolId"
app_global_get_ex
pop
swap
assert
assert
frame_dig -1
frame_bury 0
retsub
label164:
intc_0 // 0
b label165
label105:
proto 3 0
bytec_2 // ""
dupn 2
frame_dig -3
itob
bytec_0 // "v"
swap
concat
dup
box_get
swap
dup
uncover 2
assert
extract 0 242
pushint 225
getbyte
frame_dig -1
bz label166
frame_dig -1
pushint 8
<=
bz label166
intc_1 // 1
label169:
assert
intc_0 // 0
frame_bury 2
label168:
frame_dig 2
dup
frame_dig 5
<
assert
frame_dig -1
intc_1 // 1
-
frame_dig 4
intc 8 // 900
intc 9 // 192
extract3
extract 0 192
swap
intc_3 // 24
*
dup
frame_bury 0
intc_3 // 24
extract3
extract 0 24
swap
pushint 8
*
dup
frame_bury 1
extract_uint64
bnz label167
frame_dig -2
itob
intc 8 // 900
frame_dig 0
+
frame_dig 2
pushint 3
<
assert
frame_dig 1
+
frame_dig 3
swap
uncover 2
box_replace
retsub
label167:
frame_dig 2
intc_1 // 1
+
frame_bury 2
b label168
label166:
intc_0 // 0
b label169
label98:
proto 1 1
frame_dig -1
pushbytes 0x692e6e616d65 // "i.name"
app_global_get_ex
pop
itxn_begin
intc 10 // 0
swap
frame_dig -1
itob
frame_dig -1
itxn_field Applications
bytec 14 // "is_valid_nfd_appid"
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
btoi
intc_1 // 1
==
retsub
label116:
proto 2 1
intc_0 // 0
itxn_begin
pushbytes 0x726561645f70726f7065727479 // "read_property"
itxn_field ApplicationArgs
pushbytes 0x762e6361416c676f2e302e6173 // "v.caAlgo.0.as"
itxn_field ApplicationArgs
frame_dig -2
itxn_field ApplicationID
pushint 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
intc_0 // 0
label172:
frame_dig 1
len
frame_dig 2
>
bz label170
frame_dig 1
frame_dig 2
pushint 32
extract3
dup
frame_bury 0
global ZeroAddress
!=
bz label171
frame_dig 0
frame_dig -1
==
bz label171
intc_1 // 1
frame_bury 0
retsub
label171:
frame_dig 2
pushint 32
+
frame_bury 2
b label172
label170:
intc_0 // 0
frame_bury 0
retsub
