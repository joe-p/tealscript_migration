#pragma version 10
intcblock 0 1 64 6 200 30857 157 300 2100000 1000000 2000000 0
bytecblock 0x7374616b657273 0x63726561746f72417070 0x151f7c75 0x76616c696461746f724964 0x706f6f6c4964 0x7374616b6564 0x7374616b65416363756d756c61746f72 0x726f756e6473506572446179 0x0002 0x62696e526f756e645374617274 0x6e756d5374616b657273 0x726577617264416363756d756c61746f72 0x6c6173745061796f7574 0x75aff61d 0x6d696e456e7472795374616b65 0x65706f63684e756d626572 0x65776d61 0x0001 0x64 0x0c2245e1 0x068101 0x00000000000000000000000000000001 0x00000000000000000000000000000000 0xa2dc51b5 0x572767d1 0x4df8d86e 0x000100000000000f4240 0x0003 0x4174ebcb5e83b5ca30fd5373dfb1aa7fdb2c2ac84737eb4f08e9b77671d9e27c
txn NumAppArgs
bz label1
pushbytess 0x46f76533 0x59e90aa6 0x3172ca9d 0x47cfcc04 0xf9c70cbd 0x421b5abe 0xf5892d56 0x5cfbb057 0x63f3f28b 0x86a3725c 0xefc2608d 0x9cee2e40 0x51ef3b21 0xa24e2717
bytec 19 // 0x0c2245e1
txna ApplicationArgs 0
match label2 label3 label4 label5 label6 label7 label8 label9 label10 label11 label12 label13 label14 label15 label16
label1:
intc_0 // 0
return
label16:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
callsub label17
bytec_2 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label15:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
extract 2 0
callsub label18
intc_1 // 1
return
label14:
txn OnCompletion
!
assert
txn ApplicationID
assert
callsub label19
intc_1 // 1
return
label13:
txn OnCompletion
!
assert
txn ApplicationID
assert
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
txna ApplicationArgs 3
txna ApplicationArgs 4
btoi
txna ApplicationArgs 5
btoi
txna ApplicationArgs 6
btoi
callsub label20
intc_1 // 1
return
label12:
txn OnCompletion
!
assert
txn ApplicationID
assert
callsub label21
intc_1 // 1
return
label11:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
extract 2 0
callsub label22
intc_1 // 1
return
label10:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
callsub label23
intc_1 // 1
return
label9:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
callsub label24
bytec_2 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label8:
txn OnCompletion
!
assert
txn ApplicationID
assert
callsub label25
intc_1 // 1
return
label7:
txn OnCompletion
!
assert
txn ApplicationID
assert
txna ApplicationArgs 1
txna ApplicationArgs 2
btoi
callsub label26
intc_1 // 1
return
label6:
txn OnCompletion
!
assert
txn ApplicationID
assert
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
txna ApplicationArgs 1
callsub label27
itob
bytec_2 // 0x151f7c75
swap
concat
log
intc_1 // 1
return
label5:
txn OnCompletion
!
assert
txn ApplicationID
assert
txn GroupIndex
intc_1 // 1
-
dup
gtxns TypeEnum
intc_1 // 1
==
assert
callsub label28
intc_1 // 1
return
label4:
txn OnCompletion
!
assert
txn ApplicationID
assert
intc_1 // 1
return
label3:
txn OnCompletion
!
assert
txn ApplicationID
!
assert
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
txna ApplicationArgs 3
btoi
txna ApplicationArgs 4
btoi
callsub label29
intc_1 // 1
return
label2:
txn OnCompletion
pushint 4
==
assert
txn ApplicationID
assert
callsub label30
intc_1 // 1
return
label47:
proto 2 0
frame_dig -2
pushint 10
+
label34:
frame_dig 0
global OpcodeBudget
>
bz label31
itxn_begin
intc_3 // 6
itxn_field TypeEnum
pushint 5
itxn_field OnCompletion
bytec 20 // 0x068101
itxn_field ApprovalProgram
bytec 20 // 0x068101
itxn_field ClearStateProgram
frame_dig -1
switch label32 label33
label35:
itxn_submit
b label34
label33:
global MinTxnFee
itxn_field Fee
b label35
label32:
intc_0 // 0
itxn_field Fee
b label35
label31:
retsub
label74:
proto 2 3
intc_0 // 0
pushbytes 0x // ""
dup
bytec 21 // 0x00000000000000000000000000000001
frame_dig -2
intc_0 // 0
extract_uint16
intc_0 // 0
label37:
frame_dig 5
frame_dig 4
<
bz label36
frame_dig -2
extract 2 0
frame_dig 5
dup
cover 2
pushint 8
*
extract_uint64
itob
frame_dig 3
b*
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
frame_bury 3
intc_1 // 1
+
frame_bury 5
b label37
label36:
bytec 21 // 0x00000000000000000000000000000001
frame_bury 0
frame_dig -1
intc_0 // 0
extract_uint16
frame_bury 1
intc_0 // 0
frame_bury 2
label39:
frame_dig 2
frame_dig 1
<
bz label38
frame_dig -1
extract 2 0
frame_dig 2
dup
cover 2
pushint 8
*
extract_uint64
itob
frame_dig 0
b*
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
frame_bury 0
intc_1 // 1
+
frame_bury 2
b label39
label38:
frame_dig 3
frame_dig 0
b/
dup
len
pushint 8
<=
assert
pushint 8
bzero
b|
btoi
frame_dig -2
frame_dig -1
frame_bury 2
frame_bury 1
frame_bury 0
retsub
label30:
txn Sender
pushbytes 0x5e795d223558ae54ab91226bc980c451313068cc8fa62d6f9c7076bd80bb65af // addr LZ4V2IRVLCXFJK4REJV4TAGEKEYTA2GMR6TC2344OB3L3AF3MWXZ6ZAFIQ
==
assert
retsub
label29:
proto 4 0
frame_dig -4
bnz label40
frame_dig -3
!
assert
frame_dig -2
!
assert
label41:
frame_dig -1
intc 9 // 1000000
>=
assert
bytec_1 // "creatorApp"
frame_dig -4
app_global_put
bytec_3 // "validatorId"
frame_dig -3
app_global_put
bytec 4 // "poolId"
frame_dig -2
app_global_put
bytec 10 // "numStakers"
intc_0 // 0
app_global_put
bytec 5 // "staked"
intc_0 // 0
app_global_put
bytec 14 // "minEntryStake"
frame_dig -1
app_global_put
bytec 12 // "lastPayout"
global Round
app_global_put
bytec 15 // "epochNumber"
intc_0 // 0
app_global_put
bytec 7 // "roundsPerDay"
intc 5 // 30857
app_global_put
global Round
dup
intc 5 // 30857
%
-
bytec 9 // "binRoundStart"
swap
app_global_put
bytec 6 // "stakeAccumulator"
bytec 22 // 0x00000000000000000000000000000000
app_global_put
bytec 11 // "rewardAccumulator"
intc_0 // 0
app_global_put
bytec 16 // "ewma"
bytec 22 // 0x00000000000000000000000000000000
app_global_put
retsub
label40:
frame_dig -3
assert
frame_dig -2
assert
b label41
label28:
proto 1 0
bytec_0 // "stakers"
box_len
bury 1
!
assert
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
bytec 13 // 0x75aff61d
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 0 4
bytec_2 // 0x151f7c75
==
assert
intc 6 // 157
extract_uint64
dup
bz label42
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
bz label42
intc_1 // 1
label44:
pushint 100000
*
pushint 5225300
+
frame_dig -1
gtxns Receiver
global CurrentApplicationID
app_params_get AppAddress
assert
==
frame_dig -1
gtxns Amount
uncover 2
==
&&
assert
bytec_0 // "stakers"
pushint 12800
box_create
pop
frame_dig 0
bz label43
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
bz label43
itxn_begin
global CurrentApplicationID
app_params_get AppAddress
assert
intc_0 // 0
itxn_field AssetAmount
itxn_field AssetReceiver
frame_dig 0
itxn_field XferAsset
pushint 4
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
label43:
retsub
label42:
intc_0 // 0
b label44
label27:
proto 2 1
intc_0 // 0
dup
pushbytes 0x // ""
dup
bytec_0 // "stakers"
box_len
bury 1
assert
txn Sender
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
app_params_get AppAddress
assert
==
assert
frame_dig -1
global ZeroAddress
!=
assert
callsub label45
frame_dig -2
gtxns Sender
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
app_params_get AppAddress
assert
==
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
&&
frame_dig -2
gtxns Amount
dup
uncover 2
intc_1 // 1
&&
assert
global Round
pushint 320
+
swap
intc_0 // 0
swap
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
dig 1
+
bytec 5 // "staked"
swap
app_global_put
intc_0 // 0
bytec 9 // "binRoundStart"
app_global_get_ex
assert
intc_0 // 0
bytec 7 // "roundsPerDay"
app_global_get_ex
assert
+
global Round
-
intc_0 // 0
bytec 6 // "stakeAccumulator"
app_global_get_ex
assert
uncover 2
itob
dup
cover 3
uncover 2
itob
b*
b+
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
bytec 6 // "stakeAccumulator"
swap
app_global_put
intc_0 // 0
label50:
bytec_0 // "stakers"
box_len
bury 1
assert
frame_dig 8
intc 4 // 200
<
bz label46
intc 7 // 300
intc_0 // 0
callsub label47
frame_dig 8
intc_2 // 64
*
dup
frame_bury 2
bytec_0 // "stakers"
swap
intc_2 // 64
box_extract
dup
frame_bury 1
extract 0 32
dup
frame_bury 0
frame_dig -1
==
bz label48
bytec_0 // "stakers"
frame_dig 2
dup
cover 2
intc_2 // 64
box_extract
pushint 32
extract_uint64
frame_dig 4
+
itob
frame_dig 1
swap
replace2 32
frame_dig 5
dup
cover 2
itob
replace2 56
bytec_0 // "stakers"
uncover 3
uncover 2
box_replace
frame_bury 0
retsub
label48:
frame_dig 6
dup
frame_bury 3
bnz label49
frame_dig 0
global ZeroAddress
==
frame_dig 6
frame_bury 3
bz label49
frame_dig 8
intc_1 // 1
+
frame_bury 3
label49:
frame_dig 3
frame_bury 6
frame_dig 8
intc_1 // 1
+
frame_bury 8
b label50
label46:
frame_dig 6
dup
!
!
assert
intc_0 // 0
bytec 14 // "minEntryStake"
app_global_get_ex
assert
frame_dig 4
<=
assert
intc_1 // 1
-
intc_2 // 64
*
bytec_0 // "stakers"
dig 1
intc_2 // 64
box_extract
extract 0 32
global ZeroAddress
==
assert
frame_dig -1
frame_dig 7
concat
intc_0 // 0
itob
swap
dig 1
concat
swap
concat
frame_dig 5
dup
cover 2
itob
concat
bytec_0 // "stakers"
uncover 3
uncover 2
box_replace
intc_0 // 0
bytec 10 // "numStakers"
app_global_get_ex
assert
intc_1 // 1
+
bytec 10 // "numStakers"
swap
app_global_put
frame_bury 0
retsub
label26:
proto 2 0
intc_0 // 0
dup
pushbytes 0x // ""
dupn 6
frame_dig -2
txn Sender
!=
bz label51
callsub label52
assert
label51:
callsub label45
intc_0 // 0
frame_bury 6
label62:
bytec_0 // "stakers"
box_len
bury 1
assert
frame_dig 6
dup
intc 4 // 200
<
assert
intc 7 // 300
intc_0 // 0
callsub label47
intc_2 // 64
*
dup
frame_bury 5
bytec_0 // "stakers"
swap
intc_2 // 64
box_extract
dup
frame_bury 0
extract 0 32
frame_dig -2
==
bz label53
frame_dig -1
frame_bury 4
frame_dig -1
bnz label54
bytec_0 // "stakers"
frame_dig 5
intc_2 // 64
box_extract
pushint 32
extract_uint64
dup
frame_bury -1
frame_bury 4
label54:
frame_dig 4
frame_bury -1
bytec_0 // "stakers"
frame_dig 5
intc_2 // 64
box_extract
pushint 32
extract_uint64
dup
frame_dig -1
<
!
assert
frame_dig -1
-
itob
frame_dig 0
swap
replace2 32
dup
frame_bury 0
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
frame_dig -1
-
bytec 5 // "staked"
swap
app_global_put
intc_0 // 0
frame_bury 2
dup
pushint 48
extract_uint64
dup
frame_bury 3
swap
frame_bury 1
bz label55
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
bz label56
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
bytec 13 // 0x75aff61d
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 0 4
bytec_2 // 0x151f7c75
==
assert
itxn_begin
intc 6 // 157
extract_uint64
frame_dig 3
itxn_field AssetAmount
frame_dig -2
itxn_field AssetReceiver
itxn_field XferAsset
pushint 4
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
intc_0 // 0
itob
frame_dig 0
swap
replace2 48
frame_bury 0
label61:
frame_dig 3
frame_bury 2
frame_dig 0
frame_bury 1
label55:
frame_dig 1
dup
frame_bury 0
pushint 32
extract_uint64
dup
frame_bury 8
bz label57
intc_0 // 0
bytec 14 // "minEntryStake"
app_global_get_ex
assert
frame_dig 8
<=
bz label58
label57:
intc_1 // 1
label60:
assert
itxn_begin
pushbytes 0x756e7374616b6564 // "unstaked"
itxn_field Note
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
intc_1 // 1
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
intc_0 // 0
frame_bury 7
frame_dig 0
frame_bury 1
frame_dig 8
bnz label59
intc_0 // 0
bytec 10 // "numStakers"
app_global_get_ex
assert
intc_1 // 1
-
bytec 10 // "numStakers"
swap
app_global_put
frame_dig 0
global ZeroAddress
replace2 0
intc_0 // 0
itob
swap
dig 1
replace2 40
swap
replace2 48
intc_1 // 1
frame_bury 7
frame_bury 1
label59:
frame_dig 1
bytec_0 // "stakers"
frame_dig 5
uncover 2
box_replace
intc_0 // 0
bytec 9 // "binRoundStart"
app_global_get_ex
assert
intc_0 // 0
bytec 7 // "roundsPerDay"
app_global_get_ex
assert
+
global Round
-
frame_dig -1
*
itob
intc_0 // 0
bytec 6 // "stakeAccumulator"
app_global_get_ex
assert
swap
b-
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
bytec 6 // "stakeAccumulator"
swap
app_global_put
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
global CurrentApplicationID
uncover 2
itob
uncover 2
itob
concat
swap
itob
concat
frame_dig -1
itob
frame_dig 2
itob
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 7
setbit
bytec 23 // 0xa2dc51b5
itxn_field ApplicationArgs
uncover 3
itxn_field ApplicationArgs
frame_dig -2
itxn_field ApplicationArgs
uncover 2
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
retsub
label58:
intc_0 // 0
b label60
label56:
intc_0 // 0
itob
frame_dig 0
swap
replace2 48
frame_bury 0
b label61
label53:
frame_dig 6
intc_1 // 1
+
frame_bury 6
b label62
label25:
proto 0 0
intc_0 // 0
dup
pushbytes 0x // ""
dup
txn Sender
intc_0 // 0
label67:
bytec_0 // "stakers"
box_len
bury 1
assert
frame_dig 5
dup
intc 4 // 200
<
assert
intc 7 // 300
intc_0 // 0
callsub label47
intc_2 // 64
*
dup
frame_bury 3
bytec_0 // "stakers"
swap
intc_2 // 64
box_extract
dup
frame_bury 1
extract 0 32
frame_dig 4
==
bz label63
bytec_0 // "stakers"
frame_dig 3
intc_2 // 64
box_extract
dup
extract 48 8
frame_bury 0
pushint 48
extract_uint64
dup
frame_bury 2
bnz label64
retsub
label64:
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
bz label65
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
bytec 13 // 0x75aff61d
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 0 4
bytec_2 // 0x151f7c75
==
assert
itxn_begin
intc 6 // 157
extract_uint64
frame_dig 2
itxn_field AssetAmount
frame_dig 4
itxn_field AssetReceiver
itxn_field XferAsset
pushint 4
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
intc_0 // 0
itob
frame_dig 1
swap
replace2 48
frame_bury 1
label66:
bytec_0 // "stakers"
frame_dig 3
frame_dig 1
box_replace
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
global CurrentApplicationID
uncover 2
itob
uncover 2
itob
concat
swap
itob
concat
intc_0 // 0
itob
bytec 23 // 0xa2dc51b5
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
frame_dig 4
itxn_field ApplicationArgs
itxn_field ApplicationArgs
frame_dig 0
itxn_field ApplicationArgs
pushbytes 0x00 // 0x00
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
retsub
label65:
intc_0 // 0
itob
frame_dig 1
swap
replace2 48
frame_bury 1
b label66
label63:
frame_dig 5
intc_1 // 1
+
frame_bury 5
b label67
label24:
proto 1 1
pushbytes 0x // ""
intc_0 // 0
label69:
bytec_0 // "stakers"
box_len
bury 1
assert
frame_dig 1
dup
intc 4 // 200
<
assert
intc 4 // 200
intc_0 // 0
callsub label47
intc_2 // 64
*
dup
frame_bury 0
bytec_0 // "stakers"
swap
intc_2 // 64
box_extract
extract 0 32
frame_dig -1
==
bz label68
bytec_0 // "stakers"
frame_dig 0
intc_2 // 64
box_extract
frame_bury 0
retsub
label68:
frame_dig 1
intc_1 // 1
+
frame_bury 1
b label69
label23:
proto 3 0
txn Sender
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
app_params_get AppAddress
assert
==
assert
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
assert
frame_dig -2
assert
itxn_begin
frame_dig -1
itxn_field AssetAmount
frame_dig -3
itxn_field AssetReceiver
frame_dig -2
itxn_field XferAsset
pushint 4
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
retsub
label22:
proto 1 0
callsub label52
assert
pushbytes 0x616c676f64566572 // "algodVer"
frame_dig -1
app_global_put
retsub
label21:
proto 0 0
intc_0 // 0
dupn 9
pushbytes 0x // ""
dupn 32
intc_0 // 0
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
bytec 13 // 0x75aff61d
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dupn 2
extract 0 4
bytec_2 // 0x151f7c75
==
assert
pushint 173
extract_uint32
dup
global Round
dup
cover 2
dup
uncover 2
%
-
intc_0 // 0
bytec 12 // "lastPayout"
app_global_get_ex
bury 1
bz label70
intc_0 // 0
bytec 12 // "lastPayout"
app_global_get_ex
assert
dup
frame_dig 45
%
-
frame_dig 47
!=
assert
label70:
callsub label45
bytec 12 // "lastPayout"
frame_dig 46
app_global_put
intc_0 // 0
bytec 15 // "epochNumber"
app_global_get_ex
assert
intc_1 // 1
+
bytec 15 // "epochNumber"
swap
app_global_put
frame_dig 44
intc 6 // 157
extract_uint64
dup
frame_bury 37
global CurrentApplicationID
frame_bury 26
global CurrentApplicationAddress
dup
frame_bury 7
frame_dig 43
frame_bury 9
frame_bury 8
bz label71
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
!=
bz label72
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
intc_1 // 1
itob
bytec 24 // 0x572767d1
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 4 0
swap
extract 0 4
bytec_2 // 0x151f7c75
==
assert
btoi
dup
frame_bury 26
app_params_get AppAddress
swap
frame_bury 7
assert
label72:
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
bz label73
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
bytec 25 // 0x4df8d86e
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 4 0
frame_bury 43
extract 0 4
bytec_2 // 0x151f7c75
==
assert
label101:
frame_dig 43
frame_bury 9
frame_dig 7
frame_bury 8
label71:
frame_dig 9
frame_bury 43
frame_dig 8
frame_bury 7
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
pushbytes 0x1f2f0109 // 0x1f2f0109
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 0 4
bytec_2 // 0x151f7c75
==
assert
dup
pushint 22
extract_uint64
frame_bury 27
global CurrentApplicationAddress
acct_params_get AcctBalance
assert
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
-
global CurrentApplicationAddress
acct_params_get AcctMinBalance
assert
-
frame_bury 10
intc_0 // 0
frame_bury 19
pushint 1000
itob
frame_bury 2
pushbytess 0x000200071afd498d00000000000000000064 0x000100000000000003e8
callsub label74
popn 2
dup
frame_bury 12
swap
pushint 14
extract_uint64
dup
frame_bury 40
<
bz label75
intc_1 // 1
frame_bury 19
label75:
intc_0 // 0
dup
frame_bury 32
intc_0 // 0
frame_bury 34
intc_0 // 0
frame_bury 36
intc_0 // 0
frame_bury 15
frame_bury 33
frame_dig 37
bz label76
frame_dig 7
frame_dig 37
asset_holding_get AssetBalance
pop
frame_dig 27
-
frame_dig 44
pushint 165
extract_uint64
dup
frame_bury 41
>=
bz label77
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
-
frame_dig 43
extract 0 192
swap
pushint 8
*
extract_uint64
frame_dig 41
itob
bytec 8 // 0x0002
swap
concat
swap
itob
concat
bytec 26 // 0x000100000000000f4240
callsub label74
popn 2
frame_bury 32
label77:
frame_dig 32
frame_bury 33
label76:
frame_dig 33
dup
frame_bury 32
bnz label78
frame_dig 10
intc 9 // 1000000
<
bz label78
pushbytes 0x21746f6b656e2626216e6f616c676f20746f20706179 // "!token&&!noalgo to pay"
log
retsub
label78:
frame_dig 19
bz label79
frame_dig 10
dup
itob
bytec 8 // 0x0002
swap
concat
frame_dig 12
itob
concat
frame_dig 40
itob
bytec 17 // 0x0001
swap
concat
callsub label74
popn 2
swap
dig 1
-
dup
frame_bury 15
itxn_begin
bytec 28 // addr IF2OXS26QO24UMH5KNZ57MNKP7NSYKWII436WTYI5G3XM4OZ4J6EYU5L6U
pushbytes 0x706f6f6c207361747572617465642c2065786365737320746f206665652073696e6b // "pool saturated, excess to fee sink"
itxn_field Note
itxn_field Receiver
itxn_field Amount
intc_1 // 1
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
frame_bury 10
label100:
intc_0 // 0
frame_bury 17
frame_dig 10
bnz label80
frame_dig 34
frame_bury 35
frame_dig 17
frame_bury 18
frame_dig 32
bz label81
label80:
intc_0 // 0
frame_bury 24
intc_0 // 0
frame_bury 16
label85:
bytec_0 // "stakers"
box_len
bury 1
assert
frame_dig 16
intc 4 // 200
<
bz label82
pushint 400
intc_0 // 0
callsub label47
frame_dig 16
intc_2 // 64
*
dup
frame_bury 13
bytec_0 // "stakers"
swap
intc_2 // 64
box_extract
dup
frame_bury 3
extract 0 32
global ZeroAddress
!=
frame_dig 17
frame_bury 18
frame_dig 10
frame_bury 11
frame_dig 34
frame_bury 35
frame_dig 32
frame_bury 33
frame_dig 24
frame_bury 25
bz label83
bytec_0 // "stakers"
frame_dig 13
intc_2 // 64
box_extract
pushint 56
extract_uint64
dup
frame_bury 42
frame_dig 47
>=
bz label84
bytec_0 // "stakers"
frame_dig 13
intc_2 // 64
box_extract
pushint 32
extract_uint64
frame_dig 24
+
frame_bury 24
label89:
frame_dig 17
frame_bury 18
frame_dig 10
frame_bury 11
frame_dig 34
frame_bury 35
frame_dig 32
frame_bury 33
frame_dig 24
frame_bury 25
label83:
frame_dig 18
frame_bury 17
frame_dig 11
frame_bury 10
frame_dig 35
frame_bury 34
frame_dig 33
frame_bury 32
frame_dig 25
frame_bury 24
frame_dig 16
intc_1 // 1
+
frame_bury 16
b label85
label84:
frame_dig 47
frame_dig 42
-
dup
frame_bury 28
frame_dig 45
<
frame_dig 17
frame_bury 18
frame_dig 10
frame_bury 11
frame_dig 34
frame_bury 35
frame_dig 32
frame_bury 33
frame_dig 24
frame_bury 25
bz label86
bytec_0 // "stakers"
frame_dig 13
intc_2 // 64
box_extract
pushint 32
extract_uint64
dup
frame_bury 38
frame_dig 24
+
frame_bury 24
frame_dig 28
pushint 1000
*
frame_dig 45
/
frame_bury 29
frame_dig 34
frame_bury 35
frame_dig 32
dup
frame_bury 33
frame_dig 3
frame_bury 4
bz label87
frame_dig 38
itob
bytec 27 // 0x0003
swap
concat
frame_dig 32
dup
cover 2
itob
concat
frame_dig 29
itob
concat
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
itob
bytec 8 // 0x0002
swap
concat
frame_dig 2
concat
callsub label74
popn 2
swap
dig 1
-
bytec_0 // "stakers"
frame_dig 13
intc_2 // 64
box_extract
pushint 48
extract_uint64
dig 2
+
itob
frame_dig 3
swap
replace2 48
frame_dig 34
uncover 3
+
frame_bury 35
frame_bury 4
frame_bury 33
label87:
frame_dig 35
frame_bury 34
frame_dig 33
frame_bury 32
frame_dig 4
dup
frame_bury 3
frame_dig 17
frame_bury 18
frame_dig 10
dup
frame_bury 11
swap
frame_bury 4
bz label88
frame_dig 3
dup
pushint 32
extract_uint64
dup
itob
bytec 27 // 0x0003
swap
concat
frame_dig 10
dup
cover 2
itob
concat
frame_dig 29
itob
concat
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
itob
bytec 8 // 0x0002
swap
concat
frame_dig 2
concat
callsub label74
popn 2
swap
dig 1
-
uncover 2
dig 2
+
itob
uncover 3
swap
replace2 32
dup
pushint 40
extract_uint64
dig 3
+
itob
replace2 40
frame_dig 17
uncover 3
+
frame_bury 18
frame_bury 4
frame_bury 11
label88:
frame_dig 11
frame_dig 18
frame_dig 4
bytec_0 // "stakers"
frame_dig 13
uncover 2
box_replace
frame_bury 18
frame_bury 11
frame_dig 34
frame_bury 35
frame_dig 32
frame_bury 33
frame_dig 24
frame_bury 25
label86:
frame_dig 18
frame_bury 17
frame_dig 11
frame_bury 10
frame_dig 35
frame_bury 34
frame_dig 33
frame_bury 32
frame_dig 25
frame_bury 24
b label89
label82:
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
frame_dig 24
-
dup
frame_bury 23
frame_dig 34
frame_bury 35
frame_dig 17
frame_bury 18
bz label90
intc_0 // 0
frame_bury 20
label96:
bytec_0 // "stakers"
box_len
bury 1
assert
frame_dig 20
intc 4 // 200
<
bz label91
intc 4 // 200
intc_0 // 0
callsub label47
frame_dig 20
intc_2 // 64
*
dup
frame_bury 14
bytec_0 // "stakers"
swap
intc_2 // 64
box_extract
dup
frame_bury 5
extract 0 32
global ZeroAddress
!=
frame_dig 17
frame_bury 18
frame_dig 34
frame_bury 35
bz label92
bytec_0 // "stakers"
frame_dig 14
intc_2 // 64
box_extract
pushint 56
extract_uint64
dup
frame_bury 39
frame_dig 47
<
frame_dig 17
frame_bury 18
frame_dig 34
frame_bury 35
bz label92
frame_dig 47
frame_dig 39
-
frame_dig 45
>=
frame_dig 17
frame_bury 18
frame_dig 34
frame_bury 35
bz label93
frame_dig 34
frame_bury 35
frame_dig 5
frame_bury 6
frame_dig 32
bz label94
bytec_0 // "stakers"
frame_dig 14
dup
cover 2
intc_2 // 64
box_extract
pushint 32
extract_uint64
itob
bytec 8 // 0x0002
swap
concat
frame_dig 32
itob
concat
frame_dig 23
itob
bytec 17 // 0x0001
swap
concat
callsub label74
popn 2
bytec_0 // "stakers"
uncover 2
intc_2 // 64
box_extract
pushint 48
extract_uint64
dig 1
+
itob
frame_dig 5
swap
replace2 48
frame_dig 34
uncover 2
+
frame_bury 35
frame_bury 6
label94:
frame_dig 35
frame_bury 34
frame_dig 6
dup
frame_bury 5
frame_dig 17
frame_bury 18
frame_bury 6
frame_dig 10
bz label95
frame_dig 5
dup
pushint 32
extract_uint64
dup
itob
bytec 8 // 0x0002
swap
concat
frame_dig 10
itob
concat
frame_dig 23
itob
bytec 17 // 0x0001
swap
concat
callsub label74
popn 2
swap
dig 1
+
itob
uncover 2
swap
replace2 32
dup
pushint 40
extract_uint64
dig 2
+
itob
replace2 40
frame_dig 17
uncover 2
+
frame_bury 18
frame_bury 6
label95:
frame_dig 18
frame_dig 6
bytec_0 // "stakers"
frame_dig 14
uncover 2
box_replace
frame_bury 18
frame_dig 34
frame_bury 35
label93:
b label92
label92:
frame_dig 18
frame_bury 17
frame_dig 35
frame_bury 34
frame_dig 20
intc_1 // 1
+
frame_bury 20
b label96
label91:
frame_dig 34
frame_bury 35
frame_dig 17
frame_bury 18
label90:
b label81
label81:
frame_dig 35
frame_dig 18
intc_0 // 0
bytec 9 // "binRoundStart"
app_global_get_ex
assert
intc_0 // 0
bytec 7 // "roundsPerDay"
app_global_get_ex
assert
+
global Round
-
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
dig 2
+
bytec 5 // "staked"
swap
app_global_put
intc_0 // 0
bytec 6 // "stakeAccumulator"
app_global_get_ex
assert
dig 2
itob
uncover 2
itob
dig 1
b*
uncover 2
b+
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
bytec 6 // "stakeAccumulator"
swap
app_global_put
intc_0 // 0
bytec 11 // "rewardAccumulator"
app_global_get_ex
assert
uncover 2
+
bytec 11 // "rewardAccumulator"
swap
app_global_put
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
global CurrentApplicationID
uncover 2
itob
uncover 2
itob
concat
swap
itob
concat
uncover 3
itob
frame_dig 36
itob
frame_dig 15
itob
pushbytes 0x418fcefc // 0x418fcefc
itxn_field ApplicationArgs
uncover 3
itxn_field ApplicationArgs
uncover 4
itxn_field ApplicationArgs
uncover 2
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
retsub
label79:
frame_dig 44
pushint 177
extract_uint32
dup
frame_bury 30
frame_dig 10
frame_bury 11
bz label97
frame_dig 10
dup
itob
bytec 8 // 0x0002
swap
concat
frame_dig 30
itob
concat
bytec 26 // 0x000100000000000f4240
callsub label74
popn 2
dup
frame_bury 36
swap
dig 1
-
frame_bury 10
bz label98
intc_0 // 0
dup
frame_bury 21
frame_dig 44
dup
extract 44 32
dup
cover 2
frame_bury 0
extract 181 32
dup
frame_bury 1
!=
swap
frame_bury 22
bz label99
frame_dig 0
dup
acct_params_get AcctBalance
assert
swap
acct_params_get AcctMinBalance
assert
-
intc 8 // 2100000
<
frame_dig 21
frame_bury 22
bz label99
frame_dig 36
dup
intc 8 // 2100000
<
intc 8 // 2100000
cover 2
select
itxn_begin
pushbytes 0x76616c696461746f722072657761726420746f206d616e6167657220666f722066756e64696e672065706f63682075706461746573 // "validator reward to manager for funding epoch updates"
itxn_field Note
frame_dig 0
itxn_field Receiver
dup
itxn_field Amount
intc_1 // 1
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
frame_bury 22
label99:
frame_dig 36
frame_dig 22
-
dup
frame_bury 31
bz label98
itxn_begin
pushbytes 0x76616c696461746f7220726577617264 // "validator reward"
itxn_field Note
frame_dig 1
itxn_field Receiver
frame_dig 31
itxn_field Amount
intc_1 // 1
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
label98:
frame_dig 10
frame_bury 11
label97:
frame_dig 11
frame_bury 10
b label100
label73:
itxn_begin
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
global CurrentApplicationID
uncover 2
itob
uncover 2
itob
concat
swap
itob
concat
bytec 19 // 0x0c2245e1
itxn_field ApplicationArgs
itxn_field ApplicationArgs
frame_dig 26
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
extract 0 4
bytec_2 // 0x151f7c75
==
assert
b label101
label20:
proto 7 0
callsub label52
assert
frame_dig -7
gtxns Receiver
global CurrentApplicationAddress
==
frame_dig -7
gtxns Amount
intc 10 // 2000000
==
&&
assert
itxn_begin
frame_dig -1
itxn_field VoteKeyDilution
frame_dig -2
itxn_field VoteLast
frame_dig -3
itxn_field VoteFirst
frame_dig -4
itxn_field StateProofPK
frame_dig -5
itxn_field SelectionPK
frame_dig -6
itxn_field VotePK
pushint 2
itxn_field TypeEnum
intc 10 // 2000000
itxn_field Fee
itxn_submit
retsub
label19:
txn Sender
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
app_params_get AppAddress
assert
!=
bz label102
callsub label52
assert
label102:
itxn_begin
pushint 2
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
retsub
label18:
proto 2 0
callsub label52
assert
itxn_begin
intc 11 // 0
frame_dig -2
itob
global CurrentApplicationAddress
frame_dig -2
itxn_field Applications
pushbytes 0x7665726966795f6e66645f61646472 // "verify_nfd_addr"
itxn_field ApplicationArgs
frame_dig -1
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
retsub
label17:
proto 1 1
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
frame_dig -1
extract 0 8
frame_dig -1
intc_0 // 0
extract_uint64
dig 2
==
assert
intc_0 // 0
bytec 4 // "poolId"
app_global_get_ex
assert
intc_1 // 1
==
assert
frame_dig -1
extract 8 8
frame_dig -1
pushint 8
extract_uint64
intc_1 // 1
!=
assert
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
bytec 24 // 0x572767d1
itxn_field ApplicationArgs
uncover 2
itxn_field ApplicationArgs
swap
itxn_field ApplicationArgs
dup
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 4 0
swap
extract 0 4
bytec_2 // 0x151f7c75
==
assert
btoi
frame_dig -1
pushint 16
extract_uint64
swap
dig 1
==
assert
txn Sender
swap
app_params_get AppAddress
assert
==
assert
itxn_begin
swap
itob
bytec 25 // 0x4df8d86e
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dup
extract 4 0
swap
extract 0 4
bytec_2 // 0x151f7c75
==
assert
retsub
label52:
proto 0 1
itxn_begin
intc_0 // 0
bytec_1 // "creatorApp"
app_global_get_ex
assert
intc_0 // 0
bytec_3 // "validatorId"
app_global_get_ex
assert
itob
pushbytes 0x2fa22c4b // 0x2fa22c4b
itxn_field ApplicationArgs
itxn_field ApplicationArgs
itxn_field ApplicationID
intc_3 // 6
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
itxn_submit
itxn LastLog
dupn 2
extract 0 4
bytec_2 // 0x151f7c75
==
assert
txn Sender
swap
extract 4 32
==
bnz label103
txn Sender
frame_dig 0
extract 36 32
==
bz label104
label103:
intc_1 // 1
label105:
swap
retsub
label104:
intc_0 // 0
b label105
label45:
proto 0 0
intc_0 // 0
dupn 4
bytec 7 // "roundsPerDay"
app_global_get_ex
assert
dup
itob
swap
global Round
intc_0 // 0
bytec 9 // "binRoundStart"
app_global_get_ex
assert
uncover 2
+
>=
bz label106
intc 7 // 300
intc_0 // 0
callsub label47
frame_dig 4
dup
pushbytes 0x016d // 0x016d
b*
frame_bury 1
intc_0 // 0
bytec 6 // "stakeAccumulator"
app_global_get_ex
assert
swap
b/
dup
frame_bury 3
pushbytes 0x // ""
b!=
bz label107
intc_0 // 0
bytec 11 // "rewardAccumulator"
app_global_get_ex
assert
itob
pushbytes 0x2710 // 0x2710
b*
frame_dig 3
dup
cover 2
b/
frame_dig 1
frame_dig 4
b/
b*
frame_bury 2
pushbytes 0x0a // 0x0a
frame_bury 0
pushbytes 0x45d964b800 // 0x45d964b800
b>
bz label108
pushbytes 0x5a // "Z"
frame_bury 0
label108:
intc_0 // 0
bytec 16 // "ewma"
app_global_get_ex
assert
bytec 18 // "d"
frame_dig 0
dup
cover 3
b-
b*
bytec 18 // "d"
b/
frame_dig 2
uncover 2
b*
bytec 18 // "d"
b/
b+
dup
len
pushint 16
<=
assert
pushint 16
bzero
b|
bytec 16 // "ewma"
swap
app_global_put
label107:
bytec 7 // "roundsPerDay"
intc 5 // 30857
app_global_put
intc_0 // 0
bytec 5 // "staked"
app_global_get_ex
assert
intc 5 // 30857
*
itob
pushint 16
bzero
b|
bytec 6 // "stakeAccumulator"
swap
app_global_put
bytec 11 // "rewardAccumulator"
intc_0 // 0
app_global_put
global Round
dup
intc_0 // 0
bytec 7 // "roundsPerDay"
app_global_get_ex
assert
%
-
bytec 9 // "binRoundStart"
swap
app_global_put
label106:
retsub
